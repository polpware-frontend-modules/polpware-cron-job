import { DayOfWeekEnum, MonthEnum } from '@polpware/fe-utilities';
export var ScheduleTypeEnum;
(function (ScheduleTypeEnum) {
    ScheduleTypeEnum[ScheduleTypeEnum["OneTime"] = 1] = "OneTime";
    ScheduleTypeEnum[ScheduleTypeEnum["Recurrent"] = 2] = "Recurrent";
})(ScheduleTypeEnum || (ScheduleTypeEnum = {}));
export function getDefaultScheduleTime() {
    const today = new Date();
    const tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 1);
    return {
        isRecurrent: false,
        recurrence: 0,
        holidays: '',
        excludeWeekends: false,
        otherDays: '',
        customExpr: '',
        startDate: tomorrow,
        endDate: null,
        time: today,
        monthOfYear: MonthEnum.January,
        dayOfMonth: 1,
        dayOfWeek: DayOfWeekEnum.Monday
    };
}
export function isEqualString(left, right) {
    if (!left && !right) {
        return true;
    }
    return left == right;
}
export function isEqualDate(left, right) {
    if (!left && !right) {
        return true;
    }
    if (!left || !right) {
        return false;
    }
    return left.getFullYear() == right.getFullYear() &&
        left.getMonth() == right.getMonth() &&
        left.getDate() == right.getDate();
}
export function isEqualTime(left, right) {
    if (!left && !right) {
        return true;
    }
    if (!left || !right) {
        return false;
    }
    return left.getHours() == right.getHours() &&
        left.getMinutes() == right.getMinutes();
}
export function isEqualBool(left, right) {
    if (!left && !right) {
        return true;
    }
    return left === right;
}
export function isEqualScheduleTime(left, right) {
    if (!left && !right) {
        return true;
    }
    if (!left || !right) {
        return false;
    }
    if (left.isRecurrent && right.isRecurrent) {
        if (!isEqualString(left.customExpr, right.customExpr)) {
            return false;
        }
        if (!isEqualString(left.holidays, right.holidays)) {
            return false;
        }
        if (!isEqualBool(left.excludeWeekends, right.excludeWeekends)) {
            return false;
        }
        if (!isEqualString(left.otherDays, right.otherDays)) {
            return false;
        }
        if (!isEqualDate(left.endDate, right.endDate) || !isEqualTime(left.endDate, right.endDate)) {
            return false;
        }
        return true;
    }
    if (!left.isRecurrent && !right.isRecurrent) {
        if (!isEqualDate(left.startDate, right.startDate) || !isEqualTime(left.time, right.time)) {
            return false;
        }
        return true;
    }
    return false;
}
//# sourceMappingURL=data:application/json;base64,