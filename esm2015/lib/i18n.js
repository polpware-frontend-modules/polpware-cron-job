export const defaultDict = {
    polpCronJob: {
        scheduleType: 'Schedule Type',
        recurrence: 'Recurrence',
        customExpr: 'Custom CRON expression',
        startDate: 'Start date',
        monthOfYear: 'Month',
        dayOfMonth: 'Day',
        dayOfWeek: 'Day',
        time: 'Time',
        excludeHolidays: 'Exclude holidays',
        holidayLabel: 'Define the list of holidays',
        excludeWeekends: 'Exclude weekends',
        excludeOthers: 'Other exceptions',
        otherLabel: 'Define the list of exceptions',
        endDate: 'End date',
        cancelBtn: 'Cancel',
        submitBtn: 'Submit',
        oneTimeSchedule: 'One time',
        recurrentSchedule: 'Recurrent',
        everyDay: 'Every day',
        everyWeek: 'Every week',
        everyMonth: 'Every month',
        everyYear: 'Every year',
        customInterval: 'Custom',
        January: 'January',
        February: 'February',
        March: 'March',
        April: 'April',
        May: 'May',
        June: 'June',
        July: 'July',
        August: 'August',
        September: 'September',
        October: 'October',
        November: 'November',
        December: 'December',
        Sunday: 'Sunday',
        Monday: 'Monday',
        Tuesday: 'Tuesday',
        Wednesday: 'Wednesday',
        Thursday: 'Thursday',
        Friday: 'Friday',
        Saturday: 'Saturday',
        errors: {
            general: 'Some of your inputs are not valid. Please check them!',
            customExprInvalid: 'Invalid CRON expression',
            scheduleTypeRequired: 'Please select one schedule type!'
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb2xwd2FyZS9jcm9uLWpvYi8iLCJzb3VyY2VzIjpbImxpYi9pMThuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRztJQUN2QixXQUFXLEVBQUU7UUFDVCxZQUFZLEVBQUUsZUFBZTtRQUM3QixVQUFVLEVBQUUsWUFBWTtRQUN4QixVQUFVLEVBQUUsd0JBQXdCO1FBQ3BDLFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFdBQVcsRUFBRSxPQUFPO1FBQ3BCLFVBQVUsRUFBRSxLQUFLO1FBQ2pCLFNBQVMsRUFBRSxLQUFLO1FBQ2hCLElBQUksRUFBRSxNQUFNO1FBQ1osZUFBZSxFQUFFLGtCQUFrQjtRQUNuQyxZQUFZLEVBQUUsNkJBQTZCO1FBQzNDLGVBQWUsRUFBRSxrQkFBa0I7UUFDbkMsYUFBYSxFQUFFLGtCQUFrQjtRQUNqQyxVQUFVLEVBQUUsK0JBQStCO1FBQzNDLE9BQU8sRUFBRSxVQUFVO1FBQ25CLFNBQVMsRUFBRSxRQUFRO1FBQ25CLFNBQVMsRUFBRSxRQUFRO1FBQ25CLGVBQWUsRUFBRSxVQUFVO1FBQzNCLGlCQUFpQixFQUFFLFdBQVc7UUFDOUIsUUFBUSxFQUFFLFdBQVc7UUFDckIsU0FBUyxFQUFFLFlBQVk7UUFDdkIsVUFBVSxFQUFFLGFBQWE7UUFDekIsU0FBUyxFQUFFLFlBQVk7UUFDdkIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsUUFBUSxFQUFFLFVBQVU7UUFDcEIsS0FBSyxFQUFFLE9BQU87UUFDZCxLQUFLLEVBQUUsT0FBTztRQUNkLEdBQUcsRUFBRSxLQUFLO1FBQ1YsSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE1BQU0sRUFBRTtZQUNKLE9BQU8sRUFBRSx1REFBdUQ7WUFDaEUsaUJBQWlCLEVBQUUseUJBQXlCO1lBQzVDLG9CQUFvQixFQUFFLGtDQUFrQztTQUMzRDtLQUNKO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBkZWZhdWx0RGljdCA9IHtcclxuICAgIHBvbHBDcm9uSm9iOiB7XHJcbiAgICAgICAgc2NoZWR1bGVUeXBlOiAnU2NoZWR1bGUgVHlwZScsXHJcbiAgICAgICAgcmVjdXJyZW5jZTogJ1JlY3VycmVuY2UnLFxyXG4gICAgICAgIGN1c3RvbUV4cHI6ICdDdXN0b20gQ1JPTiBleHByZXNzaW9uJyxcclxuICAgICAgICBzdGFydERhdGU6ICdTdGFydCBkYXRlJyxcclxuICAgICAgICBtb250aE9mWWVhcjogJ01vbnRoJyxcclxuICAgICAgICBkYXlPZk1vbnRoOiAnRGF5JyxcclxuICAgICAgICBkYXlPZldlZWs6ICdEYXknLFxyXG4gICAgICAgIHRpbWU6ICdUaW1lJyxcclxuICAgICAgICBleGNsdWRlSG9saWRheXM6ICdFeGNsdWRlIGhvbGlkYXlzJyxcclxuICAgICAgICBob2xpZGF5TGFiZWw6ICdEZWZpbmUgdGhlIGxpc3Qgb2YgaG9saWRheXMnLFxyXG4gICAgICAgIGV4Y2x1ZGVXZWVrZW5kczogJ0V4Y2x1ZGUgd2Vla2VuZHMnLFxyXG4gICAgICAgIGV4Y2x1ZGVPdGhlcnM6ICdPdGhlciBleGNlcHRpb25zJyxcclxuICAgICAgICBvdGhlckxhYmVsOiAnRGVmaW5lIHRoZSBsaXN0IG9mIGV4Y2VwdGlvbnMnLFxyXG4gICAgICAgIGVuZERhdGU6ICdFbmQgZGF0ZScsXHJcbiAgICAgICAgY2FuY2VsQnRuOiAnQ2FuY2VsJyxcclxuICAgICAgICBzdWJtaXRCdG46ICdTdWJtaXQnLFxyXG4gICAgICAgIG9uZVRpbWVTY2hlZHVsZTogJ09uZSB0aW1lJyxcclxuICAgICAgICByZWN1cnJlbnRTY2hlZHVsZTogJ1JlY3VycmVudCcsXHJcbiAgICAgICAgZXZlcnlEYXk6ICdFdmVyeSBkYXknLFxyXG4gICAgICAgIGV2ZXJ5V2VlazogJ0V2ZXJ5IHdlZWsnLFxyXG4gICAgICAgIGV2ZXJ5TW9udGg6ICdFdmVyeSBtb250aCcsXHJcbiAgICAgICAgZXZlcnlZZWFyOiAnRXZlcnkgeWVhcicsXHJcbiAgICAgICAgY3VzdG9tSW50ZXJ2YWw6ICdDdXN0b20nLFxyXG4gICAgICAgIEphbnVhcnk6ICdKYW51YXJ5JyxcclxuICAgICAgICBGZWJydWFyeTogJ0ZlYnJ1YXJ5JyxcclxuICAgICAgICBNYXJjaDogJ01hcmNoJyxcclxuICAgICAgICBBcHJpbDogJ0FwcmlsJyxcclxuICAgICAgICBNYXk6ICdNYXknLFxyXG4gICAgICAgIEp1bmU6ICdKdW5lJyxcclxuICAgICAgICBKdWx5OiAnSnVseScsXHJcbiAgICAgICAgQXVndXN0OiAnQXVndXN0JyxcclxuICAgICAgICBTZXB0ZW1iZXI6ICdTZXB0ZW1iZXInLFxyXG4gICAgICAgIE9jdG9iZXI6ICdPY3RvYmVyJyxcclxuICAgICAgICBOb3ZlbWJlcjogJ05vdmVtYmVyJyxcclxuICAgICAgICBEZWNlbWJlcjogJ0RlY2VtYmVyJyxcclxuICAgICAgICBTdW5kYXk6ICdTdW5kYXknLFxyXG4gICAgICAgIE1vbmRheTogJ01vbmRheScsXHJcbiAgICAgICAgVHVlc2RheTogJ1R1ZXNkYXknLFxyXG4gICAgICAgIFdlZG5lc2RheTogJ1dlZG5lc2RheScsXHJcbiAgICAgICAgVGh1cnNkYXk6ICdUaHVyc2RheScsXHJcbiAgICAgICAgRnJpZGF5OiAnRnJpZGF5JyxcclxuICAgICAgICBTYXR1cmRheTogJ1NhdHVyZGF5JyxcclxuICAgICAgICBlcnJvcnM6IHtcclxuICAgICAgICAgICAgZ2VuZXJhbDogJ1NvbWUgb2YgeW91ciBpbnB1dHMgYXJlIG5vdCB2YWxpZC4gUGxlYXNlIGNoZWNrIHRoZW0hJyxcclxuICAgICAgICAgICAgY3VzdG9tRXhwckludmFsaWQ6ICdJbnZhbGlkIENST04gZXhwcmVzc2lvbicsXHJcbiAgICAgICAgICAgIHNjaGVkdWxlVHlwZVJlcXVpcmVkOiAnUGxlYXNlIHNlbGVjdCBvbmUgc2NoZWR1bGUgdHlwZSEnXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG4iXX0=