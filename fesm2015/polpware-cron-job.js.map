{"version":3,"file":"polpware-cron-job.js","sources":["ng://@polpware/cron-job/lib/i18n.ts","ng://@polpware/cron-job/lib/interfaces.ts","ng://@polpware/cron-job/lib/schedule-time-picker/schedule-time-picker.component.html","ng://@polpware/cron-job/lib/schedule-time-picker/schedule-time-picker.component.ts","ng://@polpware/cron-job/lib/cron-job.service.ts","ng://@polpware/cron-job/lib/cron-job.module.ts","ng://@polpware/cron-job/public-api.ts","ng://@polpware/cron-job/polpware-cron-job.ts"],"sourcesContent":["export const defaultDict = {\r\n    polpCronJob: {\r\n        scheduleType: 'Schedule Type',\r\n        recurrence: 'Recurrence',\r\n        customExpr: 'Custom CRON expression',\r\n        startDate: 'Start date',\r\n        monthOfYear: 'Month',\r\n        dayOfMonth: 'Day',\r\n        dayOfWeek: 'Day',\r\n        timezone: 'Timezone',\r\n        time: 'Time',\r\n        excludeHolidays: 'Exclude holidays',\r\n        holidayLabel: 'Define the list of holidays',\r\n        excludeWeekends: 'Exclude weekends',\r\n        excludeOthers: 'Other exceptions',\r\n        otherLabel: 'Define the list of exceptions',\r\n        endDate: 'End date',\r\n        cancelBtn: 'Cancel',\r\n        submitBtn: 'Submit',\r\n        oneTimeSchedule: 'One time',\r\n        recurrentSchedule: 'Recurrent',\r\n        everyDay: 'Every day',\r\n        everyWeek: 'Every week',\r\n        everyMonth: 'Every month',\r\n        everyYear: 'Every year',\r\n        customInterval: 'Custom',\r\n        January: 'January',\r\n        February: 'February',\r\n        March: 'March',\r\n        April: 'April',\r\n        May: 'May',\r\n        June: 'June',\r\n        July: 'July',\r\n        August: 'August',\r\n        September: 'September',\r\n        October: 'October',\r\n        November: 'November',\r\n        December: 'December',\r\n        Sunday: 'Sunday',\r\n        Monday: 'Monday',\r\n        Tuesday: 'Tuesday',\r\n        Wednesday: 'Wednesday',\r\n        Thursday: 'Thursday',\r\n        Friday: 'Friday',\r\n        Saturday: 'Saturday',\r\n        errors: {\r\n            general: 'Some of your inputs are not valid. Please check them!',\r\n            customExprInvalid: 'Invalid CRON expression',\r\n            timezoneInvalid: 'Timezone is not valid. Only a number from -10 to 12 is accepted. ',\r\n            scheduleTypeRequired: 'Please select one schedule type!'\r\n        }\r\n    }\r\n};\r\n","/**\r\n Get the timezone offset between the local time and Utc\r\n */\r\nexport function getTimezoneOffset() {\r\n    const d = new Date();\r\n    const n = d.getTimezoneOffset();\r\n    return - Math.floor(n / 60);\r\n}\r\n\r\nexport enum IntervalEnum {\r\n    Day = 10,\r\n    Week = 50,\r\n    Month = 100,\r\n    Year = 500,\r\n    Custom = 10000\r\n}\r\n\r\nexport enum ScheduleTypeEnum {\r\n    OneTime = 1,\r\n    Recurrent = 2\r\n}\r\n\r\nexport enum MonthEnum {\r\n    January = 1,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport function getMonthsOfYear() {\r\n    const ret = [];\r\n    for (var enumMember in MonthEnum) {\r\n        var isValueProperty = parseInt(enumMember, 10) >= 0\r\n        if (isValueProperty) {\r\n            ret.push({\r\n                value: enumMember,\r\n                text: 'polpCronJob.' + MonthEnum[enumMember]\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\n\r\nexport enum DayOfWeekEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\n\r\nexport function getDaysOfWeek() {\r\n    const ret = [];\r\n    for (var enumMember in DayOfWeekEnum) {\r\n        var isValueProperty = parseInt(enumMember, 10) >= 0\r\n        if (isValueProperty) {\r\n            ret.push({\r\n                value: enumMember,\r\n                text: 'polpCronJob.' + DayOfWeekEnum[enumMember]\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function getDaysOfMonth() {\r\n    const ret = [];\r\n    for (let i = 1; i < 32; i++) {\r\n        ret.push({\r\n            value: i,\r\n            text: i.toString()\r\n        });\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport interface IScheduleTime {\r\n    isRecurrent: boolean;\r\n    recurrence?: IntervalEnum;\r\n    holidays?: string;\r\n    excludeWeekends?: boolean;\r\n    otherDays?: string;\r\n    customExpr?: string;\r\n    timezone: number;\r\n    startDate?: Date;\r\n    endDate?: Date;\r\n    time?: Date;\r\n    monthOfYear?: number;\r\n    dayOfMonth?: number;\r\n    dayOfWeek?: number;\r\n}\r\n\r\nexport function getDefaultScheduleTime(): IScheduleTime {\r\n    const today = new Date()\r\n    const tomorrow = new Date(today)\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n\r\n    return {\r\n        isRecurrent: false,\r\n        recurrence: 0,\r\n        holidays: '',\r\n        excludeWeekends: false,\r\n        otherDays: '',\r\n        customExpr: '',\r\n        timezone: getTimezoneOffset(),\r\n        startDate: tomorrow,\r\n        endDate: null,\r\n        time: today,\r\n        monthOfYear: MonthEnum.January,\r\n        dayOfMonth: 1,\r\n        dayOfWeek: DayOfWeekEnum.Monday\r\n    };\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"confirm()\">\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.scheduleType\">\n        <label class=\"col-12 col-md-4 col-form-label\">\n            {{'polpCronJob.scheduleType' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <div class=\"form-check form-check-inline\"\n                 *ngFor=\"let opt of scheduleTypeOptions;let i=index\">\n                <input class=\"form-check-input\"\n                       formControlName=\"scheduleType\"\n                       type=\"radio\"\n                       id=\"{{'schedule-type-opt-' + i}}\"\n                       value=\"{{opt.value}}\">\n                <label class=\"form-check-label\"\n                       for=\"{{'schedule-type-opt-' + i}}\">\n                    {{opt.text | hyperTrans:null:null:defaultRes}}\n                </label>\n            </div>\n            <span class=\"text-warning d-block my-1 small\" *ngIf=\"form.hasError('scheduleType') && (form.get('scheduleType').dirty || form.get('scheduleType').touched)\">\n                {{'polpCronJob.errors.scheduleTypeRequired' | hyperTrans:null:null:defaultRes}}\n            </span>\n        </div>\n    </div>\n    \n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.recurrence\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-recurrence\">\n            {{'polpCronJob.recurrence' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <select class=\"form-control\"\n                    id=\"schedule-recurrence\"\n                    formControlName=\"recurrence\">\n                <option selected value=\"\">...</option>\n                <option value=\"{{opt.value}}\" *ngFor=\"let opt of recurrenceOptions\">\n                    {{opt.text | hyperTrans:null:null:defaultRes}}\n                </option>\n            </select>\n        </div>\n    </div>\n\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.recurrence && visibiltyCfg.customExpr\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-custom-expr\">\n            {{'polpCronJob.customExpr' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   [autofocus]=\"true\"\n                   id=\"schedule-custom-expr\"\n                   formControlName=\"customExpr\">\n            <span class=\"text-warning d-block my-1 small\" *ngIf=\"form.hasError('customExpr') && (form.get('customExpr').dirty || form.get('customExpr').touched)\">\n                {{'polpCronJob.errors.customExprInvalid' | hyperTrans:null:null:defaultRes}}\n            </span>\n        </div>\n    </div>\n\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.startDate\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-start-date\">\n            {{'polpCronJob.startDate' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   id=\"schedule-start-date\"\n                   bsDatepicker\n                   [bsConfig]=\"{ adaptivePosition: true }\"\n                   formControlName=\"startDate\">\n        </div>\n    </div>\n\n\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.monthOfYear\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-month-of-year\">\n            {{'polpCronJob.monthOfYear' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <select class=\"form-control\"\n                    id=\"schedule-month-of-year\"\n                    formControlName=\"monthOfYear\">\n                <option selected value=\"\">...</option>\n                <option value=\"{{opt.value}}\" *ngFor=\"let opt of monthsOfYearOptions\">\n                    {{opt.text | hyperTrans:null:null:defaultRes}}\n                </option>\n            </select>\n        </div>\n    </div>\n\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.dayOfMonth\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-day-of-month\">\n            {{'polpCronJob.dayOfMonth' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <select class=\"form-control\"\n                    id=\"schedule-day-of-month\"\n                    formControlName=\"dayOfMonth\">\n                <option selected value=\"\">...</option>\n                <option value=\"{{opt.value}}\" *ngFor=\"let opt of daysOfMonthOptions\">\n                    {{opt.text}}\n                </option>\n            </select>\n        </div>\n    </div>\n\n\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.dayOfWeek\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-day-of-week\">\n            {{'polpCronJob.dayOfWeek' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <select class=\"form-control\"\n                    id=\"schedule-day-of-week\"\n                    formControlName=\"dayOfWeek\">\n                <option selected value=\"\">...</option>\n                <option value=\"{{opt.value}}\" *ngFor=\"let opt of daysOfWeekOptions\">\n                    {{opt.text | hyperTrans:null:null:defaultRes}}\n                </option>\n            </select>\n        </div>\n    </div>\n\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.timezone\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-timezone\">\n            {{'polpCronJob.timezone' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <input class=\"form-control\"\n                   type=\"number\"\n                   id=\"schedule-timezone\"\n                   formControlName=\"timezone\">\n            <span class=\"text-warning d-block my-1 small\" *ngIf=\"form.hasError('timezone') && (form.get('timezone').dirty || form.get('timezone').touched)\">\n                {{'polpCronJob.errors.timezoneInvalid' | hyperTrans:null:null:defaultRes}}\n            </span>\n        </div>\n    </div>\n    \n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.time\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-time\">\n            {{'polpCronJob.time' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <timepicker id=\"schedule-time\"\n                        formControlName=\"time\">\n            </timepicker>\n        </div>\n    </div>\n\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.excludeHolidays\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-exclude-holidays\">\n            {{'polpCronJob.excludeHolidays' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <div class=\"form-check\">\n                <input class=\"form-check-input position-static\"\n                       type=\"checkbox\"\n                       id=\"schedule-exclude-holidays\"\n                       formControlName=\"excludeHolidays\">\n            </div>\n            <div>\n                {{'polpCronJob.holidayLabel' | hyperTrans:null:null:defaultRes}}\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.excludeWeekends\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-exclude-weekends\">\n            {{'polpCronJob.excludeWeekends' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <div class=\"form-check\">\n                <input class=\"form-check-input position-static\"\n                       type=\"checkbox\"\n                       id=\"schedule-exclude-weekends\"\n                       formControlName=\"excludeWeekends\">\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.excludeOthers\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-exclude-others\">\n            {{'polpCronJob.excludeOthers' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <div class=\"form-check\">\n                <input class=\"form-check-input position-static\"\n                       id=\"schedule-exclude-others\"\n                       type=\"checkbox\"\n                       formControlName=\"excludeOthers\">\n            </div>\n            <div>\n                {{'polpCronJob.otherLabel' | hyperTrans:null:null:defaultRes}}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group row\" *ngIf=\"visibiltyCfg.endDate\">\n        <label class=\"col-12 col-md-4 col-form-label\"\n               for=\"schedule-end-date\">\n            {{'polpCronJob.endDate' | hyperTrans:null:null:defaultRes}}\n        </label>\n        <div class=\"col-12 col-md-8\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   id=\"schedule-end-date\"\n                   bsDatepicker\n                   [bsConfig]=\"{ adaptivePosition: true }\"\n                   formControlName=\"endDate\">\n        </div>\n    </div>\n\n    <ng-container *ngFor=\"let a of alerts\">\n        <alert [type]=\"a.type\" [dismissOnTimeout]=\"a.timeout\">\n            {{a.message | hyperTrans:null:null:defaultRes}}\n        </alert>\n    </ng-container>\n    \n    <div class=\"d-flex justify-content-end mb-4\" *ngIf=\"!hideSubmitBtn || !hideCancelBtn\">\n        <button type=\"button\" class=\"btn btn-warning\"\n                (click)=\"cancel()\" *ngIf=\"!hideCancelBtn\">\n            {{'polpCronJob.cancelBtn' | hyperTrans:null:null:defaultRes}}\n        </button>\n        <button type=\"submit\" class=\"btn btn-success\"\n                *ngIf=\"!hideSubmitBtn\">\n            {{'polpCronJob.submitBtn' | hyperTrans:null:null:defaultRes}}\n        </button>\n    </div>\n</form>\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { safeParseInt } from '@polpware/fe-utilities';\nimport { AlertDefaultImpl, IHasAlertFeature } from '@polpware/ngx-alert';\nimport { DefaultFormBaseComponent, IDefaultFormInputs } from '@polpware/ngx-form-common';\nimport { parseString } from 'cron-parser';\nimport { Subscription } from 'rxjs';\nimport { defaultDict } from '../i18n';\nimport { getDaysOfMonth, getDaysOfWeek, getDefaultScheduleTime, getMonthsOfYear, IntervalEnum, IScheduleTime, ScheduleTypeEnum } from '../interfaces';\n\nexport interface ISettings extends IDefaultFormInputs {\n    hideSubmitBtn?: boolean;\n    hideCancelBtn?: boolean;\n}\n\nconst defaultSettings: ISettings = {\n    hideSubmitBtn: false,\n    hideCancelBtn: true\n}\n\nconst formValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n\n    const scheduleTypeVal = safeParseInt((control.get('scheduleType') as FormControl).value);\n    if (scheduleTypeVal == 0) {\n        return { scheduleType: true };\n    }\n    const timezoneVal = safeParseInt((control.get('timezone') as FormControl).value);\n    if (timezoneVal > 13 || timezoneVal < -11) {\n        return { timezone: true };\n    }\n    if (scheduleTypeVal == 2) { // one time\n        const recurrenceVal = safeParseInt((control.get('recurrence') as FormControl).value);\n        if (recurrenceVal == 0) {\n            return { recurrence: true }\n        } else if (recurrenceVal == IntervalEnum.Custom) {\n            const customExprVal = (control.get('customExpr') as FormControl).value;\n            if (!customExprVal) {\n                return { customExpr: true };\n            } else {\n                // validate\n                const r = parseString(customExprVal);\n                if (r.errors && Object.keys(r.errors).length) {\n                    return { customExpr: true };\n                }\n            }\n        }\n    }\n};\n\nexport interface IFormFields {\n    scheduleType: number;\n    recurrence: number;\n    excludeHolidays: boolean;\n    holidays: string;\n    excludeWeekends: boolean;\n    excludeOthers: boolean;\n    otherDays: string;\n    customExpr: string;\n    timezone: number;\n    startDate: Date;\n    endDate: Date;\n    monthOfYear: number;\n    dayOfMonth: number;\n    dayOfWeek: number;\n    time: Date;\n}\n\nfunction mapToFormFields(data: IScheduleTime) {\n    const defaultData = getDefaultScheduleTime();\n    data = Object.assign({}, defaultData, data || {});\n    return {\n        // The value for the radio button is type of string.\n        scheduleType: (data.isRecurrent ? ScheduleTypeEnum.Recurrent : ScheduleTypeEnum.OneTime).toString(),\n        recurrence: data.recurrence,\n        excludeHolidays: !!data.holidays,\n        holidays: data.holidays,\n        excludeWeekends: data.excludeWeekends,\n        excludeOthers: !!data.otherDays,\n        otherDays: data.otherDays,\n        customExpr: data.customExpr,\n        timezone: data.timezone,\n        startDate: data.startDate,\n        endDate: data.endDate,\n        time: data.time,\n        monthOfYear: data.monthOfYear,\n        dayOfWeek: data.dayOfWeek,\n        dayOfMonth: data.dayOfMonth\n    };\n}\n\n@Component({\n    selector: 'polp-bs-schedule-time-picker',\n    templateUrl: './schedule-time-picker.component.html',\n    styleUrls: ['./schedule-time-picker.component.css']\n})\nexport class ScheduleTimePickerComponent extends DefaultFormBaseComponent\n    implements OnInit, OnDestroy, OnChanges, IHasAlertFeature {\n\n    @Input() initSettings: ISettings = {};\n    @Input() initValue: IScheduleTime = null;\n\n    settings: ISettings = {};\n\n    defaultRes = defaultDict;\n\n    // Schedule modle\n    form: FormGroup;\n    scheduleTypeOptions = [{\n        value: ScheduleTypeEnum.OneTime,\n        text: 'polpCronJob.oneTimeSchedule'\n    }, {\n        value: ScheduleTypeEnum.Recurrent,\n        text: 'polpCronJob.recurrentSchedule'\n    }];\n\n    recurrenceOptions = [{\n        value: IntervalEnum.Day,\n        text: 'polpCronJob.everyDay'\n    }, {\n        value: IntervalEnum.Week,\n        text: 'polpCronJob.everyWeek'\n    }, {\n        value: IntervalEnum.Month,\n        text: 'polpCronJob.everyMonth'\n    }, {\n        value: IntervalEnum.Year,\n        text: 'polpCronJob.everyYear'\n    }, {\n        value: IntervalEnum.Custom,\n        text: 'polpCronJob.customInterval'\n    }];\n\n    daysOfWeekOptions = getDaysOfWeek();\n    monthsOfYearOptions = getMonthsOfYear();\n    daysOfMonthOptions = getDaysOfMonth();\n\n    visibiltyCfg = {\n        scheduleType: true,\n        recurrence: false,\n        customExpr: false,\n        excludeHolidays: false,\n        excludeWeekends: false,\n        excludeOthers: false,\n        timezone: false,\n        startDate: false,\n        endDate: false,\n        time: false,\n        monthOfYear: false,\n        dayOfMonth: false,\n        dayOfWeek: false\n    };\n\n    isSaving: boolean;\n    alertProvider = new AlertDefaultImpl();\n\n    private _subr: Subscription;\n\n    constructor(private _builder: FormBuilder) {\n        super();\n    }\n\n\n    get alerts() {\n        return this.alertProvider.data;\n    }\n\n    ngOnInit(): void {\n        this.settings = Object.assign({}, defaultSettings, this.initSettings);\n        this.hideCancelBtn = this.settings.hideCancelBtn;\n        this.hideSubmitBtn = this.settings.hideSubmitBtn;\n\n        const fields = mapToFormFields(this.initValue);\n        this.form = this._builder.group(fields, { validators: [formValidator] });\n        this.updateFieldVisibility(this.form.value);\n\n        this._subr = this.form.valueChanges.subscribe(a => {\n            this.updateFieldVisibility(a);\n\n            this.notifyValidation();\n            this.notifyValueChanges(this.computeOutValue(a));\n        });\n    }\n\n    ngOnDestroy() {\n        this._subr.unsubscribe();\n    }\n\n    ngOnChanges(data: SimpleChanges) {\n        if (!data.initValue.firstChange) {\n            this.updateFormData(data.initValue.currentValue);\n        }\n    }\n\n    protected updateFormData(data: IScheduleTime) {\n        const changes = mapToFormFields(data);\n        this.form.setValue(changes, {\n            emitEvent: true\n        });\n    }\n\n    protected updateFieldVisibility(a: IFormFields) {\n\n        for (let k in this.visibiltyCfg) {\n            if (this.visibiltyCfg.hasOwnProperty(k)) {\n                this.visibiltyCfg[k] = false;\n            }\n        }\n        this.visibiltyCfg.scheduleType = true;\n\n        const scheduleTypeVal = safeParseInt(a.scheduleType);\n\n        if (scheduleTypeVal == 1) {\n            this.visibiltyCfg.startDate = true;\n            this.visibiltyCfg.time = true;\n            this.visibiltyCfg.timezone = true;\n        } else {\n            this.visibiltyCfg.recurrence = true;\n            this.visibiltyCfg.excludeHolidays = true;\n            this.visibiltyCfg.excludeWeekends = true;\n            this.visibiltyCfg.excludeOthers = true;\n            this.visibiltyCfg.endDate = true;\n            this.visibiltyCfg.time = true;\n            this.visibiltyCfg.timezone = true;\n\n            const recurrentVal = safeParseInt(a.recurrence);\n            if (recurrentVal == IntervalEnum.Year) {\n                this.visibiltyCfg.monthOfYear = true;\n                this.visibiltyCfg.dayOfMonth = true;\n            } else if (recurrentVal == IntervalEnum.Month) {\n                this.visibiltyCfg.dayOfMonth = true;\n            } else if (recurrentVal == IntervalEnum.Week) {\n                this.visibiltyCfg.dayOfWeek = true;\n            } else if (recurrentVal == IntervalEnum.Custom) {\n                this.visibiltyCfg.time = false;\n                this.visibiltyCfg.customExpr = true;\n            }\n        }\n    }\n\n    protected computeOutValue(a: IFormFields) {\n        const scheduleTypeVal = safeParseInt(a.scheduleType);\n        const output = scheduleTypeVal == ScheduleTypeEnum.OneTime ?\n            this.getOneTimeValue(a) : this.getRecurrentValue(a);\n        return output;\n    }\n\n    protected getOneTimeValue(a: IFormFields): IScheduleTime {\n        const timezone = safeParseInt(a.timezone);\n\n        return {\n            isRecurrent: false,\n            timezone: timezone,\n            startDate: a.startDate,\n            time: a.time\n        };\n    }\n\n    protected getRecurrentValue(a: IFormFields): IScheduleTime {\n        const recurrence = safeParseInt(a.recurrence);\n        const timezone = safeParseInt(a.timezone);\n\n        return {\n            isRecurrent: true,\n            recurrence: recurrence,\n            holidays: a.excludeHolidays ? a.holidays : '',\n            excludeWeekends: a.excludeWeekends,\n            otherDays: a.excludeOthers ? a.otherDays : '',\n            timezone: timezone,\n            startDate: a.startDate,\n            endDate: a.endDate,\n            time: a.time,\n            monthOfYear: a.monthOfYear,\n            dayOfMonth: a.dayOfMonth,\n            dayOfWeek: a.dayOfWeek\n        };\n    }\n\n    confirm() {\n        if (!this.form.valid) {\n            this.alertProvider.warning('polpCronJob.errors.general', 5000);\n            return;\n        }\n\n        const output = this.computeOutValue(this.form.value);\n        this.onSave.emit(output);\n    }\n\n    cancel() {\n        this.onCancel.emit();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IScheduleTime, IntervalEnum } from './interfaces';\nimport { parseExpression } from 'cron-parser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CronJobService {\n\n    constructor() { }\n\n    parseCronExpr(source: string, target: IScheduleTime) {\n        const a = parseExpression(source);\n\n        // Case 1 (every year)\n        if (a.fields.month.length == 1 && a.fields.dayOfMonth.length == 1) {\n            target.recurrence = IntervalEnum.Year;\n        } else if (a.fields.month.length == 12 &&\n            a.fields.dayOfMonth.length == 1 &&\n            a.fields.dayOfWeek.length == 8) {\n            target.recurrence = IntervalEnum.Month;\n        } else if (a.fields.month.length == 12 &&\n            a.fields.dayOfMonth.length == 31 &&\n            a.fields.dayOfWeek.length == 1) {\n            target.recurrence = IntervalEnum.Week;\n        } else if (a.fields.month.length == 12 &&\n            a.fields.dayOfMonth.length == 31 &&\n            a.fields.dayOfWeek.length == 8) {\n            target.recurrence == IntervalEnum.Day;\n        } else {\n            target.recurrence = IntervalEnum.Custom;\n        }\n\n        // A utc time \n        const today = new Date();\n        today.setHours(a.fields.hour[0] || 0);\n        today.setMinutes(a.fields.minute[0] || 0);\n        // Timezone\n        today.setHours((today.getHours() + target.timezone + 24) % 24);\n        // Time\n        target.time = today;\n    }\n\n    composeCronExpr(source: IScheduleTime) {\n        // IsRecurrent true\n\n        // Convert it into Utc time\n        const utc = new Date(source.time);\n        utc.setHours((utc.getHours() - source.timezone + 24) % 24);\n\n        if (source.recurrence == IntervalEnum.Year) {\n            return `${utc.getMinutes()} ${utc.getHours()} ${source.dayOfMonth} ${source.monthOfYear} *`;\n        } else if (source.recurrence == IntervalEnum.Month) {\n            return `${utc.getMinutes()} ${utc.getHours()} ${source.dayOfMonth} * *`;\n        } else if (source.recurrence == IntervalEnum.Week) {\n            return `${utc.getMinutes()} ${utc.getHours()} * * ${source.dayOfWeek}`;\n        } else if (source.recurrence == IntervalEnum.Day) {\n            return `${utc.getMinutes()} ${utc.getHours()} * * *`;\n        } else if (source.recurrence == IntervalEnum.Custom) {\n            return source.customExpr;\n        }\n\n        return '';\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { FtAutofocusModule } from '@40three/ngx-autofocus-directive';\n\nimport { NgxI18nModule } from '@polpware/ngx-i18n';\n\nimport { ScheduleTimePickerComponent } from './schedule-time-picker/schedule-time-picker.component';\n\n@NgModule({\n    declarations: [\n        ScheduleTimePickerComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        BsDropdownModule,\n        TabsModule,\n        PaginationModule,\n        ModalModule,\n        AccordionModule,\n        PopoverModule,\n        TooltipModule,\n        CarouselModule,\n        AlertModule,\n        BsDatepickerModule,\n        ButtonsModule,\n        CollapseModule,\n        ProgressbarModule,\n        TimepickerModule,\n\n        FtAutofocusModule,\n\n        NgxI18nModule\n    ],\n    exports: [\n        ScheduleTimePickerComponent\n    ]\n})\nexport class PolpBsCronJobModule { }\n","/*\n * Public API Surface of cron-job\n */\n\nexport * from './lib/i18n';\nexport * from './lib/interfaces';\nexport * from './lib/schedule-time-picker/schedule-time-picker.component';\nexport * from './lib/cron-job.service';\nexport * from './lib/cron-job.module';\n\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵlistener"],"mappings":"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"}