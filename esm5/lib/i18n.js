export var defaultDict = {
    polpCronJob: {
        scheduleType: 'Schedule Type',
        recurrence: 'Recurrence',
        customExpr: 'Custom CRON expression',
        startDate: 'Start date',
        inputDate: 'Input one date and confirm',
        monthOfYear: 'Month',
        dayOfMonth: 'Day',
        dayOfWeek: 'Day',
        time: 'Time',
        excludeHolidays: 'Exclude holidays',
        holidayLabel: 'Define the list of holidays',
        excludeWeekends: 'Exclude weekends',
        excludeOthers: 'Other exceptions',
        otherLabel: 'Define the list of exceptions',
        selectOne: 'Select one below',
        endDate: 'End date',
        closeBtn: 'Close',
        cancelBtn: 'Cancel',
        submitBtn: 'Submit',
        confirmBtn: 'Confirm',
        editBtn: 'Edit',
        oneTimeSchedule: 'One time',
        recurrentSchedule: 'Recurrent',
        everyDay: 'Every day',
        everyWeek: 'Every week',
        everyMonth: 'Every month',
        everyYear: 'Every year',
        customInterval: 'Custom',
        January: 'January',
        February: 'February',
        March: 'March',
        April: 'April',
        May: 'May',
        June: 'June',
        July: 'July',
        August: 'August',
        September: 'September',
        October: 'October',
        November: 'November',
        December: 'December',
        Sunday: 'Sunday',
        Monday: 'Monday',
        Tuesday: 'Tuesday',
        Wednesday: 'Wednesday',
        Thursday: 'Thursday',
        Friday: 'Friday',
        Saturday: 'Saturday',
        messages: {
            working: 'Working ...'
        },
        notSetYet: 'Not set yet',
        holidaysEditorTitle: 'Edit holidays',
        othersEditorTitle: 'Edit others',
        errors: {
            general: 'Some of your inputs are not valid. Please check them!',
            customExprInvalid: 'Invalid CRON expression',
            scheduleTypeRequired: 'Please select one schedule type!',
            somethingWrong: 'Something went wrong. Please try later!'
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb2xwd2FyZS9jcm9uLWpvYi8iLCJzb3VyY2VzIjpbImxpYi9pMThuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRztJQUN2QixXQUFXLEVBQUU7UUFDVCxZQUFZLEVBQUUsZUFBZTtRQUM3QixVQUFVLEVBQUUsWUFBWTtRQUN4QixVQUFVLEVBQUUsd0JBQXdCO1FBQ3BDLFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFNBQVMsRUFBRSw0QkFBNEI7UUFDdkMsV0FBVyxFQUFFLE9BQU87UUFDcEIsVUFBVSxFQUFFLEtBQUs7UUFDakIsU0FBUyxFQUFFLEtBQUs7UUFDaEIsSUFBSSxFQUFFLE1BQU07UUFDWixlQUFlLEVBQUUsa0JBQWtCO1FBQ25DLFlBQVksRUFBRSw2QkFBNkI7UUFDM0MsZUFBZSxFQUFFLGtCQUFrQjtRQUNuQyxhQUFhLEVBQUUsa0JBQWtCO1FBQ2pDLFVBQVUsRUFBRSwrQkFBK0I7UUFDM0MsU0FBUyxFQUFFLGtCQUFrQjtRQUM3QixPQUFPLEVBQUUsVUFBVTtRQUNuQixRQUFRLEVBQUUsT0FBTztRQUNqQixTQUFTLEVBQUUsUUFBUTtRQUNuQixTQUFTLEVBQUUsUUFBUTtRQUNuQixVQUFVLEVBQUUsU0FBUztRQUNyQixPQUFPLEVBQUUsTUFBTTtRQUNmLGVBQWUsRUFBRSxVQUFVO1FBQzNCLGlCQUFpQixFQUFFLFdBQVc7UUFDOUIsUUFBUSxFQUFFLFdBQVc7UUFDckIsU0FBUyxFQUFFLFlBQVk7UUFDdkIsVUFBVSxFQUFFLGFBQWE7UUFDekIsU0FBUyxFQUFFLFlBQVk7UUFDdkIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsUUFBUSxFQUFFLFVBQVU7UUFDcEIsS0FBSyxFQUFFLE9BQU87UUFDZCxLQUFLLEVBQUUsT0FBTztRQUNkLEdBQUcsRUFBRSxLQUFLO1FBQ1YsSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLFFBQVEsRUFBRTtZQUNOLE9BQU8sRUFBRSxhQUFhO1NBQ3pCO1FBQ0QsU0FBUyxFQUFFLGFBQWE7UUFDeEIsbUJBQW1CLEVBQUUsZUFBZTtRQUNwQyxpQkFBaUIsRUFBRSxhQUFhO1FBQ2hDLE1BQU0sRUFBRTtZQUNKLE9BQU8sRUFBRSx1REFBdUQ7WUFDaEUsaUJBQWlCLEVBQUUseUJBQXlCO1lBQzVDLG9CQUFvQixFQUFFLGtDQUFrQztZQUN4RCxjQUFjLEVBQUUseUNBQXlDO1NBQzVEO0tBQ0o7Q0FDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlZmF1bHREaWN0ID0ge1xyXG4gICAgcG9scENyb25Kb2I6IHtcclxuICAgICAgICBzY2hlZHVsZVR5cGU6ICdTY2hlZHVsZSBUeXBlJyxcclxuICAgICAgICByZWN1cnJlbmNlOiAnUmVjdXJyZW5jZScsXHJcbiAgICAgICAgY3VzdG9tRXhwcjogJ0N1c3RvbSBDUk9OIGV4cHJlc3Npb24nLFxyXG4gICAgICAgIHN0YXJ0RGF0ZTogJ1N0YXJ0IGRhdGUnLFxyXG4gICAgICAgIGlucHV0RGF0ZTogJ0lucHV0IG9uZSBkYXRlIGFuZCBjb25maXJtJyxcclxuICAgICAgICBtb250aE9mWWVhcjogJ01vbnRoJyxcclxuICAgICAgICBkYXlPZk1vbnRoOiAnRGF5JyxcclxuICAgICAgICBkYXlPZldlZWs6ICdEYXknLFxyXG4gICAgICAgIHRpbWU6ICdUaW1lJyxcclxuICAgICAgICBleGNsdWRlSG9saWRheXM6ICdFeGNsdWRlIGhvbGlkYXlzJyxcclxuICAgICAgICBob2xpZGF5TGFiZWw6ICdEZWZpbmUgdGhlIGxpc3Qgb2YgaG9saWRheXMnLFxyXG4gICAgICAgIGV4Y2x1ZGVXZWVrZW5kczogJ0V4Y2x1ZGUgd2Vla2VuZHMnLFxyXG4gICAgICAgIGV4Y2x1ZGVPdGhlcnM6ICdPdGhlciBleGNlcHRpb25zJyxcclxuICAgICAgICBvdGhlckxhYmVsOiAnRGVmaW5lIHRoZSBsaXN0IG9mIGV4Y2VwdGlvbnMnLFxyXG4gICAgICAgIHNlbGVjdE9uZTogJ1NlbGVjdCBvbmUgYmVsb3cnLFxyXG4gICAgICAgIGVuZERhdGU6ICdFbmQgZGF0ZScsXHJcbiAgICAgICAgY2xvc2VCdG46ICdDbG9zZScsXHJcbiAgICAgICAgY2FuY2VsQnRuOiAnQ2FuY2VsJyxcclxuICAgICAgICBzdWJtaXRCdG46ICdTdWJtaXQnLFxyXG4gICAgICAgIGNvbmZpcm1CdG46ICdDb25maXJtJyxcclxuICAgICAgICBlZGl0QnRuOiAnRWRpdCcsXHJcbiAgICAgICAgb25lVGltZVNjaGVkdWxlOiAnT25lIHRpbWUnLFxyXG4gICAgICAgIHJlY3VycmVudFNjaGVkdWxlOiAnUmVjdXJyZW50JyxcclxuICAgICAgICBldmVyeURheTogJ0V2ZXJ5IGRheScsXHJcbiAgICAgICAgZXZlcnlXZWVrOiAnRXZlcnkgd2VlaycsXHJcbiAgICAgICAgZXZlcnlNb250aDogJ0V2ZXJ5IG1vbnRoJyxcclxuICAgICAgICBldmVyeVllYXI6ICdFdmVyeSB5ZWFyJyxcclxuICAgICAgICBjdXN0b21JbnRlcnZhbDogJ0N1c3RvbScsXHJcbiAgICAgICAgSmFudWFyeTogJ0phbnVhcnknLFxyXG4gICAgICAgIEZlYnJ1YXJ5OiAnRmVicnVhcnknLFxyXG4gICAgICAgIE1hcmNoOiAnTWFyY2gnLFxyXG4gICAgICAgIEFwcmlsOiAnQXByaWwnLFxyXG4gICAgICAgIE1heTogJ01heScsXHJcbiAgICAgICAgSnVuZTogJ0p1bmUnLFxyXG4gICAgICAgIEp1bHk6ICdKdWx5JyxcclxuICAgICAgICBBdWd1c3Q6ICdBdWd1c3QnLFxyXG4gICAgICAgIFNlcHRlbWJlcjogJ1NlcHRlbWJlcicsXHJcbiAgICAgICAgT2N0b2JlcjogJ09jdG9iZXInLFxyXG4gICAgICAgIE5vdmVtYmVyOiAnTm92ZW1iZXInLFxyXG4gICAgICAgIERlY2VtYmVyOiAnRGVjZW1iZXInLFxyXG4gICAgICAgIFN1bmRheTogJ1N1bmRheScsXHJcbiAgICAgICAgTW9uZGF5OiAnTW9uZGF5JyxcclxuICAgICAgICBUdWVzZGF5OiAnVHVlc2RheScsXHJcbiAgICAgICAgV2VkbmVzZGF5OiAnV2VkbmVzZGF5JyxcclxuICAgICAgICBUaHVyc2RheTogJ1RodXJzZGF5JyxcclxuICAgICAgICBGcmlkYXk6ICdGcmlkYXknLFxyXG4gICAgICAgIFNhdHVyZGF5OiAnU2F0dXJkYXknLFxyXG4gICAgICAgIG1lc3NhZ2VzOiB7XHJcbiAgICAgICAgICAgIHdvcmtpbmc6ICdXb3JraW5nIC4uLidcclxuICAgICAgICB9LFxyXG4gICAgICAgIG5vdFNldFlldDogJ05vdCBzZXQgeWV0JyxcclxuICAgICAgICBob2xpZGF5c0VkaXRvclRpdGxlOiAnRWRpdCBob2xpZGF5cycsXHJcbiAgICAgICAgb3RoZXJzRWRpdG9yVGl0bGU6ICdFZGl0IG90aGVycycsXHJcbiAgICAgICAgZXJyb3JzOiB7XHJcbiAgICAgICAgICAgIGdlbmVyYWw6ICdTb21lIG9mIHlvdXIgaW5wdXRzIGFyZSBub3QgdmFsaWQuIFBsZWFzZSBjaGVjayB0aGVtIScsXHJcbiAgICAgICAgICAgIGN1c3RvbUV4cHJJbnZhbGlkOiAnSW52YWxpZCBDUk9OIGV4cHJlc3Npb24nLFxyXG4gICAgICAgICAgICBzY2hlZHVsZVR5cGVSZXF1aXJlZDogJ1BsZWFzZSBzZWxlY3Qgb25lIHNjaGVkdWxlIHR5cGUhJyxcclxuICAgICAgICAgICAgc29tZXRoaW5nV3Jvbmc6ICdTb21ldGhpbmcgd2VudCB3cm9uZy4gUGxlYXNlIHRyeSBsYXRlciEnXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG4iXX0=