export var defaultDict = {
    polpCronJob: {
        scheduleType: 'Schedule Type',
        recurrence: 'Recurrence',
        customExpr: 'Custom CRON expression',
        startDate: 'Start date',
        monthOfYear: 'Month',
        dayOfMonth: 'Day',
        dayOfWeek: 'Day',
        time: 'Time',
        excludeHolidays: 'Exclude holidays',
        holidayLabel: 'Define the list of holidays',
        excludeWeekends: 'Exclude weekends',
        excludeOthers: 'Other exceptions',
        otherLabel: 'Define the list of exceptions',
        selectOne: 'Select one below',
        endDate: 'End date',
        closeBtn: 'Close',
        cancelBtn: 'Cancel',
        submitBtn: 'Submit',
        confirmBtn: 'Confirm',
        oneTimeSchedule: 'One time',
        recurrentSchedule: 'Recurrent',
        everyDay: 'Every day',
        everyWeek: 'Every week',
        everyMonth: 'Every month',
        everyYear: 'Every year',
        customInterval: 'Custom',
        January: 'January',
        February: 'February',
        March: 'March',
        April: 'April',
        May: 'May',
        June: 'June',
        July: 'July',
        August: 'August',
        September: 'September',
        October: 'October',
        November: 'November',
        December: 'December',
        Sunday: 'Sunday',
        Monday: 'Monday',
        Tuesday: 'Tuesday',
        Wednesday: 'Wednesday',
        Thursday: 'Thursday',
        Friday: 'Friday',
        Saturday: 'Saturday',
        messages: {
            working: 'Working ...'
        },
        errors: {
            general: 'Some of your inputs are not valid. Please check them!',
            customExprInvalid: 'Invalid CRON expression',
            scheduleTypeRequired: 'Please select one schedule type!',
            somethingWrong: 'Something went wrong. Please try later!'
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb2xwd2FyZS9jcm9uLWpvYi8iLCJzb3VyY2VzIjpbImxpYi9pMThuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRztJQUN2QixXQUFXLEVBQUU7UUFDVCxZQUFZLEVBQUUsZUFBZTtRQUM3QixVQUFVLEVBQUUsWUFBWTtRQUN4QixVQUFVLEVBQUUsd0JBQXdCO1FBQ3BDLFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFdBQVcsRUFBRSxPQUFPO1FBQ3BCLFVBQVUsRUFBRSxLQUFLO1FBQ2pCLFNBQVMsRUFBRSxLQUFLO1FBQ2hCLElBQUksRUFBRSxNQUFNO1FBQ1osZUFBZSxFQUFFLGtCQUFrQjtRQUNuQyxZQUFZLEVBQUUsNkJBQTZCO1FBQzNDLGVBQWUsRUFBRSxrQkFBa0I7UUFDbkMsYUFBYSxFQUFFLGtCQUFrQjtRQUNqQyxVQUFVLEVBQUUsK0JBQStCO1FBQzNDLFNBQVMsRUFBRSxrQkFBa0I7UUFDN0IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsUUFBUSxFQUFFLE9BQU87UUFDakIsU0FBUyxFQUFFLFFBQVE7UUFDbkIsU0FBUyxFQUFFLFFBQVE7UUFDbkIsVUFBVSxFQUFFLFNBQVM7UUFDckIsZUFBZSxFQUFFLFVBQVU7UUFDM0IsaUJBQWlCLEVBQUUsV0FBVztRQUM5QixRQUFRLEVBQUUsV0FBVztRQUNyQixTQUFTLEVBQUUsWUFBWTtRQUN2QixVQUFVLEVBQUUsYUFBYTtRQUN6QixTQUFTLEVBQUUsWUFBWTtRQUN2QixjQUFjLEVBQUUsUUFBUTtRQUN4QixPQUFPLEVBQUUsU0FBUztRQUNsQixRQUFRLEVBQUUsVUFBVTtRQUNwQixLQUFLLEVBQUUsT0FBTztRQUNkLEtBQUssRUFBRSxPQUFPO1FBQ2QsR0FBRyxFQUFFLEtBQUs7UUFDVixJQUFJLEVBQUUsTUFBTTtRQUNaLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLFFBQVE7UUFDaEIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsUUFBUSxFQUFFLFVBQVU7UUFDcEIsUUFBUSxFQUFFLFVBQVU7UUFDcEIsTUFBTSxFQUFFLFFBQVE7UUFDaEIsTUFBTSxFQUFFLFFBQVE7UUFDaEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsUUFBUSxFQUFFLFVBQVU7UUFDcEIsTUFBTSxFQUFFLFFBQVE7UUFDaEIsUUFBUSxFQUFFLFVBQVU7UUFDcEIsUUFBUSxFQUFFO1lBQ04sT0FBTyxFQUFFLGFBQWE7U0FDekI7UUFDRCxNQUFNLEVBQUU7WUFDSixPQUFPLEVBQUUsdURBQXVEO1lBQ2hFLGlCQUFpQixFQUFFLHlCQUF5QjtZQUM1QyxvQkFBb0IsRUFBRSxrQ0FBa0M7WUFDeEQsY0FBYyxFQUFFLHlDQUF5QztTQUM1RDtLQUNKO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBkZWZhdWx0RGljdCA9IHtcclxuICAgIHBvbHBDcm9uSm9iOiB7XHJcbiAgICAgICAgc2NoZWR1bGVUeXBlOiAnU2NoZWR1bGUgVHlwZScsXHJcbiAgICAgICAgcmVjdXJyZW5jZTogJ1JlY3VycmVuY2UnLFxyXG4gICAgICAgIGN1c3RvbUV4cHI6ICdDdXN0b20gQ1JPTiBleHByZXNzaW9uJyxcclxuICAgICAgICBzdGFydERhdGU6ICdTdGFydCBkYXRlJyxcclxuICAgICAgICBtb250aE9mWWVhcjogJ01vbnRoJyxcclxuICAgICAgICBkYXlPZk1vbnRoOiAnRGF5JyxcclxuICAgICAgICBkYXlPZldlZWs6ICdEYXknLFxyXG4gICAgICAgIHRpbWU6ICdUaW1lJyxcclxuICAgICAgICBleGNsdWRlSG9saWRheXM6ICdFeGNsdWRlIGhvbGlkYXlzJyxcclxuICAgICAgICBob2xpZGF5TGFiZWw6ICdEZWZpbmUgdGhlIGxpc3Qgb2YgaG9saWRheXMnLFxyXG4gICAgICAgIGV4Y2x1ZGVXZWVrZW5kczogJ0V4Y2x1ZGUgd2Vla2VuZHMnLFxyXG4gICAgICAgIGV4Y2x1ZGVPdGhlcnM6ICdPdGhlciBleGNlcHRpb25zJyxcclxuICAgICAgICBvdGhlckxhYmVsOiAnRGVmaW5lIHRoZSBsaXN0IG9mIGV4Y2VwdGlvbnMnLFxyXG4gICAgICAgIHNlbGVjdE9uZTogJ1NlbGVjdCBvbmUgYmVsb3cnLFxyXG4gICAgICAgIGVuZERhdGU6ICdFbmQgZGF0ZScsXHJcbiAgICAgICAgY2xvc2VCdG46ICdDbG9zZScsXHJcbiAgICAgICAgY2FuY2VsQnRuOiAnQ2FuY2VsJyxcclxuICAgICAgICBzdWJtaXRCdG46ICdTdWJtaXQnLFxyXG4gICAgICAgIGNvbmZpcm1CdG46ICdDb25maXJtJyxcclxuICAgICAgICBvbmVUaW1lU2NoZWR1bGU6ICdPbmUgdGltZScsXHJcbiAgICAgICAgcmVjdXJyZW50U2NoZWR1bGU6ICdSZWN1cnJlbnQnLFxyXG4gICAgICAgIGV2ZXJ5RGF5OiAnRXZlcnkgZGF5JyxcclxuICAgICAgICBldmVyeVdlZWs6ICdFdmVyeSB3ZWVrJyxcclxuICAgICAgICBldmVyeU1vbnRoOiAnRXZlcnkgbW9udGgnLFxyXG4gICAgICAgIGV2ZXJ5WWVhcjogJ0V2ZXJ5IHllYXInLFxyXG4gICAgICAgIGN1c3RvbUludGVydmFsOiAnQ3VzdG9tJyxcclxuICAgICAgICBKYW51YXJ5OiAnSmFudWFyeScsXHJcbiAgICAgICAgRmVicnVhcnk6ICdGZWJydWFyeScsXHJcbiAgICAgICAgTWFyY2g6ICdNYXJjaCcsXHJcbiAgICAgICAgQXByaWw6ICdBcHJpbCcsXHJcbiAgICAgICAgTWF5OiAnTWF5JyxcclxuICAgICAgICBKdW5lOiAnSnVuZScsXHJcbiAgICAgICAgSnVseTogJ0p1bHknLFxyXG4gICAgICAgIEF1Z3VzdDogJ0F1Z3VzdCcsXHJcbiAgICAgICAgU2VwdGVtYmVyOiAnU2VwdGVtYmVyJyxcclxuICAgICAgICBPY3RvYmVyOiAnT2N0b2JlcicsXHJcbiAgICAgICAgTm92ZW1iZXI6ICdOb3ZlbWJlcicsXHJcbiAgICAgICAgRGVjZW1iZXI6ICdEZWNlbWJlcicsXHJcbiAgICAgICAgU3VuZGF5OiAnU3VuZGF5JyxcclxuICAgICAgICBNb25kYXk6ICdNb25kYXknLFxyXG4gICAgICAgIFR1ZXNkYXk6ICdUdWVzZGF5JyxcclxuICAgICAgICBXZWRuZXNkYXk6ICdXZWRuZXNkYXknLFxyXG4gICAgICAgIFRodXJzZGF5OiAnVGh1cnNkYXknLFxyXG4gICAgICAgIEZyaWRheTogJ0ZyaWRheScsXHJcbiAgICAgICAgU2F0dXJkYXk6ICdTYXR1cmRheScsXHJcbiAgICAgICAgbWVzc2FnZXM6IHtcclxuICAgICAgICAgICAgd29ya2luZzogJ1dvcmtpbmcgLi4uJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXJyb3JzOiB7XHJcbiAgICAgICAgICAgIGdlbmVyYWw6ICdTb21lIG9mIHlvdXIgaW5wdXRzIGFyZSBub3QgdmFsaWQuIFBsZWFzZSBjaGVjayB0aGVtIScsXHJcbiAgICAgICAgICAgIGN1c3RvbUV4cHJJbnZhbGlkOiAnSW52YWxpZCBDUk9OIGV4cHJlc3Npb24nLFxyXG4gICAgICAgICAgICBzY2hlZHVsZVR5cGVSZXF1aXJlZDogJ1BsZWFzZSBzZWxlY3Qgb25lIHNjaGVkdWxlIHR5cGUhJyxcclxuICAgICAgICAgICAgc29tZXRoaW5nV3Jvbmc6ICdTb21ldGhpbmcgd2VudCB3cm9uZy4gUGxlYXNlIHRyeSBsYXRlciEnXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG4iXX0=