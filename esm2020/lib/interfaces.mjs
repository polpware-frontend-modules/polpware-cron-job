import { DayOfWeekEnum, MonthEnum } from '@polpware/fe-utilities';
export var ScheduleTypeEnum;
(function (ScheduleTypeEnum) {
    ScheduleTypeEnum[ScheduleTypeEnum["OneTime"] = 1] = "OneTime";
    ScheduleTypeEnum[ScheduleTypeEnum["Recurrent"] = 2] = "Recurrent";
})(ScheduleTypeEnum || (ScheduleTypeEnum = {}));
export function getDefaultScheduleTime() {
    const today = new Date();
    const tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 1);
    return {
        isRecurrent: false,
        recurrence: 0,
        holidays: '',
        excludeWeekends: false,
        otherDays: '',
        customExpr: '',
        startDate: tomorrow,
        endDate: null,
        time: today,
        monthOfYear: MonthEnum.January,
        dayOfMonth: 1,
        dayOfWeek: DayOfWeekEnum.Monday
    };
}
export function isEqualString(left, right) {
    if (!left && !right) {
        return true;
    }
    return left == right;
}
export function isEqualDate(left, right) {
    if (!left && !right) {
        return true;
    }
    if (!left || !right) {
        return false;
    }
    return left.getFullYear() == right.getFullYear() &&
        left.getMonth() == right.getMonth() &&
        left.getDate() == right.getDate();
}
export function isEqualTime(left, right) {
    if (!left && !right) {
        return true;
    }
    if (!left || !right) {
        return false;
    }
    return left.getHours() == right.getHours() &&
        left.getMinutes() == right.getMinutes();
}
export function isEqualBool(left, right) {
    if (!left && !right) {
        return true;
    }
    return left === right;
}
export function isEqualScheduleTime(left, right) {
    if (!left && !right) {
        return true;
    }
    if (!left || !right) {
        return false;
    }
    if (left.isRecurrent && right.isRecurrent) {
        if (!isEqualString(left.customExpr, right.customExpr)) {
            return false;
        }
        if (!isEqualString(left.holidays, right.holidays)) {
            return false;
        }
        if (!isEqualBool(left.excludeWeekends, right.excludeWeekends)) {
            return false;
        }
        if (!isEqualString(left.otherDays, right.otherDays)) {
            return false;
        }
        if (!isEqualDate(left.endDate, right.endDate) || !isEqualTime(left.endDate, right.endDate)) {
            return false;
        }
        return true;
    }
    if (!left.isRecurrent && !right.isRecurrent) {
        if (!isEqualDate(left.startDate, right.startDate) || !isEqualTime(left.time, right.time)) {
            return false;
        }
        return true;
    }
    return false;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BvbHB3YXJlL2Nyb24tam9iL3NyYy9saWIvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFnQixTQUFTLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUVoRixNQUFNLENBQU4sSUFBWSxnQkFHWDtBQUhELFdBQVksZ0JBQWdCO0lBQ3hCLDZEQUFXLENBQUE7SUFDWCxpRUFBYSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxnQkFBZ0IsS0FBaEIsZ0JBQWdCLFFBRzNCO0FBaUJELE1BQU0sVUFBVSxzQkFBc0I7SUFDbEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQTtJQUN4QixNQUFNLFFBQVEsR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUNoQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQTtJQUV4QyxPQUFPO1FBQ0gsV0FBVyxFQUFFLEtBQUs7UUFDbEIsVUFBVSxFQUFFLENBQUM7UUFDYixRQUFRLEVBQUUsRUFBRTtRQUNaLGVBQWUsRUFBRSxLQUFLO1FBQ3RCLFNBQVMsRUFBRSxFQUFFO1FBQ2IsVUFBVSxFQUFFLEVBQUU7UUFDZCxTQUFTLEVBQUUsUUFBUTtRQUNuQixPQUFPLEVBQUUsSUFBSTtRQUNiLElBQUksRUFBRSxLQUFLO1FBQ1gsV0FBVyxFQUFFLFNBQVMsQ0FBQyxPQUFPO1FBQzlCLFVBQVUsRUFBRSxDQUFDO1FBQ2IsU0FBUyxFQUFFLGFBQWEsQ0FBQyxNQUFNO0tBQ2xDLENBQUM7QUFDTixDQUFDO0FBRUQsTUFBTSxVQUFVLGFBQWEsQ0FBQyxJQUFZLEVBQUUsS0FBYTtJQUNyRCxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1FBQ2pCLE9BQU8sSUFBSSxD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LEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3RGLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBRUQsT0FBTyxJQUFJLENBQUM7S0FDZjtJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXlPZldlZWtFbnVtLCBJbnRlcnZhbEVudW0sIE1vbnRoRW51bSB9IGZyb20gJ0Bwb2xwd2FyZS9mZS11dGlsaXRpZXMnO1xyXG5cclxuZXhwb3J0IGVudW0gU2NoZWR1bGVUeXBlRW51bSB7XHJcbiAgICBPbmVUaW1lID0gMSxcclxuICAgIFJlY3VycmVudCA9IDJcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJU2NoZWR1bGVUaW1lIHtcclxuICAgIGlzUmVjdXJyZW50OiBib29sZWFuO1xyXG4gICAgcmVjdXJyZW5jZT86IEludGVydmFsRW51bTtcclxuICAgIGhvbGlkYXlzPzogc3RyaW5nO1xyXG4gICAgZXhjbHVkZVdlZWtlbmRzPzogYm9vbGVhbjtcclxuICAgIG90aGVyRGF5cz86IHN0cmluZztcclxuICAgIGN1c3RvbUV4cHI/OiBzdHJpbmc7XHJcbiAgICBzdGFydERhdGU/OiBEYXRlO1xyXG4gICAgZW5kRGF0ZT86IERhdGU7XHJcbiAgICB0aW1lPzogRGF0ZTtcclxuICAgIG1vbnRoT2ZZZWFyPzogbnVtYmVyO1xyXG4gICAgZGF5T2ZNb250aD86IG51bWJlcjtcclxuICAgIGRheU9mV2Vlaz86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRTY2hlZHVsZVRpbWUoKTogSVNjaGVkdWxlVGltZSB7XHJcbiAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKClcclxuICAgIGNvbnN0IHRvbW9ycm93ID0gbmV3IERhdGUodG9kYXkpXHJcbiAgICB0b21vcnJvdy5zZXREYXRlKHRvbW9ycm93LmdldERhdGUoKSArIDEpXHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpc1JlY3VycmVudDogZmFsc2UsXHJcbiAgICAgICAgcmVjdXJyZW5jZTogMCxcclxuICAgICAgICBob2xpZGF5czogJycsXHJcbiAgICAgICAgZXhjbHVkZVdlZWtlbmRzOiBmYWxzZSxcclxuICAgICAgICBvdGhlckRheXM6ICcnLFxyXG4gICAgICAgIGN1c3RvbUV4cHI6ICcnLFxyXG4gICAgICAgIHN0YXJ0RGF0ZTogdG9tb3Jyb3csXHJcbiAgICAgICAgZW5kRGF0ZTogbnVsbCxcclxuICAgICAgICB0aW1lOiB0b2RheSxcclxuICAgICAgICBtb250aE9mWWVhcjogTW9udGhFbnVtLkphbnVhcnksXHJcbiAgICAgICAgZGF5T2ZNb250aDogMSxcclxuICAgICAgICBkYXlPZldlZWs6IERheU9mV2Vla0VudW0uTW9uZGF5XHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNFcXVhbFN0cmluZyhsZWZ0OiBzdHJpbmcsIHJpZ2h0OiBzdHJpbmcpIHtcclxuICAgIGlmICghbGVmdCAmJiAhcmlnaHQpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHJldHVybiBsZWZ0ID09IHJpZ2h0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNFcXVhbERhdGUobGVmdDogRGF0ZSwgcmlnaHQ6IERhdGUpIHtcclxuICAgIGlmICghbGVmdCAmJiAhcmlnaHQpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGlmICghbGVmdCB8fCAhcmlnaHQpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGxlZnQuZ2V0RnVsbFllYXIoKSA9PSByaWdodC5nZXRGdWxsWWVhcigpICYmXHJcbiAgICAgICAgbGVmdC5nZXRNb250aCgpID09IHJpZ2h0LmdldE1vbnRoKCkgJiZcclxuICAgICAgICBsZWZ0LmdldERhdGUoKSA9PSByaWdodC5nZXREYXRlKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0VxdWFsVGltZShsZWZ0OiBEYXRlLCByaWdodDogRGF0ZSkge1xyXG4gICAgaWYgKCFsZWZ0ICYmICFyaWdodCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgaWYgKCFsZWZ0IHx8ICFyaWdodCkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbGVmdC5nZXRIb3VycygpID09IHJpZ2h0LmdldEhvdXJzKCkgJiZcclxuICAgICAgICBsZWZ0LmdldE1pbnV0ZXMoKSA9PSByaWdodC5nZXRNaW51dGVzKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0VxdWFsQm9vbChsZWZ0OiBib29sZWFuLCByaWdodDogYm9vbGVhbikge1xyXG4gICAgaWYgKCFsZWZ0ICYmICFyaWdodCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBsZWZ0ID09PSByaWdodDtcclxufVxyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0VxdWFsU2NoZWR1bGVUaW1lKGxlZnQ6IElTY2hlZHVsZVRpbWUsIHJpZ2h0OiBJU2NoZWR1bGVUaW1lKSB7XHJcbiAgICBpZiAoIWxlZnQgJiYgIXJpZ2h0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFsZWZ0IHx8ICFyaWdodCkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAobGVmdC5pc1JlY3VycmVudCAmJiByaWdodC5pc1JlY3VycmVudCkge1xyXG4gICAgICAgIGlmICghaXNFcXVhbFN0cmluZyhsZWZ0LmN1c3RvbUV4cHIsIHJpZ2h0LmN1c3RvbUV4cHIpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghaXNFcXVhbFN0cmluZyhsZWZ0LmhvbGlkYXlzLCByaWdodC5ob2xpZGF5cykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCFpc0VxdWFsQm9vbChsZWZ0LmV4Y2x1ZGVXZWVrZW5kcywgcmlnaHQuZXhjbHVkZVdlZWtlbmRzKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIWlzRXF1YWxTdHJpbmcobGVmdC5vdGhlckRheXMsIHJpZ2h0Lm90aGVyRGF5cykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCFpc0VxdWFsRGF0ZShsZWZ0LmVuZERhdGUsIHJpZ2h0LmVuZERhdGUpIHx8ICFpc0VxdWFsVGltZShsZWZ0LmVuZERhdGUsIHJpZ2h0LmVuZERhdGUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghbGVmdC5pc1JlY3VycmVudCAmJiAhcmlnaHQuaXNSZWN1cnJlbnQpIHtcclxuICAgICAgICBpZiAoIWlzRXF1YWxEYXRlKGxlZnQuc3RhcnREYXRlLCByaWdodC5zdGFydERhdGUpIHx8ICFpc0VxdWFsVGltZShsZWZ0LnRpbWUsIHJpZ2h0LnRpbWUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmYWxzZTtcclxufVxyXG4iXX0=