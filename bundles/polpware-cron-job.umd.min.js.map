{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/cron-job/lib/interfaces.ts","ng://@polpware/cron-job/lib/i18n.ts","ng://@polpware/cron-job/lib/schedule-time-picker/schedule-time-picker.component.ts","ng://@polpware/cron-job/lib/schedule-time-modal/schedule-time-modal.component.ts","ng://@polpware/cron-job/lib/cron-job.service.ts","ng://@polpware/cron-job/lib/utils.service.ts","ng://@polpware/cron-job/lib/cron-job.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","ScheduleTypeEnum","defaultDict","polpCronJob","scheduleType","recurrence","customExpr","startDate","monthOfYear","dayOfMonth","dayOfWeek","time","excludeHolidays","holidayLabel","excludeWeekends","excludeOthers","otherLabel","endDate","cancelBtn","submitBtn","oneTimeSchedule","recurrentSchedule","everyDay","everyWeek","everyMonth","everyYear","customInterval","January","February","March","April","May","June","July","August","September","October","November","December","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","errors","general","customExprInvalid","scheduleTypeRequired","getDefaultScheduleTime","today","Date","tomorrow","setDate","getDate","isRecurrent","holidays","otherDays","MonthEnum","DayOfWeekEnum","defaultSettings","hideSubmitBtn","hideCancelBtn","formValidator","control","scheduleTypeVal","safeParseInt","get","recurrenceVal","IntervalEnum","Custom","customExprVal","parseString","keys","mapToFormFields","data","defaultData","assign","Recurrent","OneTime","toString","ScheduleTimePickerComponent","_builder","_this","_super","initSettings","initValue","settings","defaultRes","scheduleTypeOptions","text","recurrenceOptions","Day","Week","Month","Year","daysOfWeekOptions","getDaysOfWeek","monthsOfYearOptions","getMonthsOfYear","daysOfMonthOptions","getDaysOfMonth","visibiltyCfg","alertProvider","AlertDefaultImpl","ngOnInit","fields","form","group","validators","updateFieldVisibility","_subr","valueChanges","subscribe","a","notifyValidation","notifyValueChanges","computeOutValue","ngOnDestroy","unsubscribe","ngOnChanges","firstChange","updateFormData","currentValue","changes","setValue","emitEvent","k","recurrentVal","getOneTimeValue","getRecurrentValue","confirm","valid","output","onSave","emit","warning","cancel","onCancel","FormBuilder","Input","Component","selector","template","DefaultFormBaseComponent","ScheduleTimeModalComponent","bsModalRef","bsModalService","faSpinner","title","close","closeModal","outputValue","updateScheduler","evt","validateScheduler","isValid","confirmAsync","clean","isSaving","onConfirmAsync","_a","danger","BsModalRef","BsModalService","ObservableModalAbstractComponent","CronJobService","parseCronExpr","source","parseExpression","month","timeInUtc","UTC","getFullYear","getMonth","hour","minute","composeCronExpr","utc","moment","getMinutes","Injectable","providedIn","UtilsService","_modalService","showScheduleTimeEditorAsync","input","show","animated","ignoreBackdropClick","initialState","keyboard","class","content","toPromise","PolpBsCronJobModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","BsDropdownModule","TabsModule","PaginationModule","ModalModule","AccordionModule","PopoverModule","TooltipModule","CarouselModule","AlertModule","BsDatepickerModule","ButtonsModule","CollapseModule","ProgressbarModule","TimepickerModule","FtAutofocusModule","NgxI18nModule","PolpDraggableModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { DayOfWeekEnum, IntervalEnum, MonthEnum } from '@polpware/fe-utilities';\r\n\r\nexport enum ScheduleTypeEnum {\r\n    OneTime = 1,\r\n    Recurrent = 2\r\n}\r\n\r\nexport interface IScheduleTime {\r\n    isRecurrent: boolean;\r\n    recurrence?: IntervalEnum;\r\n    holidays?: string;\r\n    excludeWeekends?: boolean;\r\n    otherDays?: string;\r\n    customExpr?: string;\r\n    startDate?: Date;\r\n    endDate?: Date;\r\n    time?: Date;\r\n    monthOfYear?: number;\r\n    dayOfMonth?: number;\r\n    dayOfWeek?: number;\r\n}\r\n\r\nexport function getDefaultScheduleTime(): IScheduleTime {\r\n    const today = new Date()\r\n    const tomorrow = new Date(today)\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n\r\n    return {\r\n        isRecurrent: false,\r\n        recurrence: 0,\r\n        holidays: '',\r\n        excludeWeekends: false,\r\n        otherDays: '',\r\n        customExpr: '',\r\n        startDate: tomorrow,\r\n        endDate: null,\r\n        time: today,\r\n        monthOfYear: MonthEnum.January,\r\n        dayOfMonth: 1,\r\n        dayOfWeek: DayOfWeekEnum.Monday\r\n    };\r\n}\r\n","export const defaultDict = {\r\n    polpCronJob: {\r\n        scheduleType: 'Schedule Type',\r\n        recurrence: 'Recurrence',\r\n        customExpr: 'Custom CRON expression',\r\n        startDate: 'Start date',\r\n        monthOfYear: 'Month',\r\n        dayOfMonth: 'Day',\r\n        dayOfWeek: 'Day',\r\n        time: 'Time',\r\n        excludeHolidays: 'Exclude holidays',\r\n        holidayLabel: 'Define the list of holidays',\r\n        excludeWeekends: 'Exclude weekends',\r\n        excludeOthers: 'Other exceptions',\r\n        otherLabel: 'Define the list of exceptions',\r\n        endDate: 'End date',\r\n        cancelBtn: 'Cancel',\r\n        submitBtn: 'Submit',\r\n        oneTimeSchedule: 'One time',\r\n        recurrentSchedule: 'Recurrent',\r\n        everyDay: 'Every day',\r\n        everyWeek: 'Every week',\r\n        everyMonth: 'Every month',\r\n        everyYear: 'Every year',\r\n        customInterval: 'Custom',\r\n        January: 'January',\r\n        February: 'February',\r\n        March: 'March',\r\n        April: 'April',\r\n        May: 'May',\r\n        June: 'June',\r\n        July: 'July',\r\n        August: 'August',\r\n        September: 'September',\r\n        October: 'October',\r\n        November: 'November',\r\n        December: 'December',\r\n        Sunday: 'Sunday',\r\n        Monday: 'Monday',\r\n        Tuesday: 'Tuesday',\r\n        Wednesday: 'Wednesday',\r\n        Thursday: 'Thursday',\r\n        Friday: 'Friday',\r\n        Saturday: 'Saturday',\r\n        errors: {\r\n            general: 'Some of your inputs are not valid. Please check them!',\r\n            customExprInvalid: 'Invalid CRON expression',\r\n            scheduleTypeRequired: 'Please select one schedule type!'\r\n        }\r\n    }\r\n};\r\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { getDaysOfMonth, getDaysOfWeek, getMonthsOfYear, IntervalEnum, safeParseInt } from '@polpware/fe-utilities';\nimport { AlertDefaultImpl, IHasAlertFeature } from '@polpware/ngx-alert';\nimport { DefaultFormBaseComponent, IDefaultFormInputs } from '@polpware/ngx-form-common';\nimport { parseString } from 'cron-parser';\nimport { Subscription } from 'rxjs';\nimport { defaultDict } from '../i18n';\nimport { getDefaultScheduleTime, IScheduleTime, ScheduleTypeEnum } from '../interfaces';\n\nexport interface ISettings extends IDefaultFormInputs {\n    hideSubmitBtn?: boolean;\n    hideCancelBtn?: boolean;\n}\n\nconst defaultSettings: ISettings = {\n    hideSubmitBtn: false,\n    hideCancelBtn: true\n}\n\nconst formValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n\n    const scheduleTypeVal = safeParseInt((control.get('scheduleType') as FormControl).value);\n    if (scheduleTypeVal == 0) {\n        return { scheduleType: true };\n    }\n    if (scheduleTypeVal == 2) { // one time\n        const recurrenceVal = safeParseInt((control.get('recurrence') as FormControl).value);\n        if (recurrenceVal == 0) {\n            return { recurrence: true }\n        } else if (recurrenceVal == IntervalEnum.Custom) {\n            const customExprVal = (control.get('customExpr') as FormControl).value;\n            if (!customExprVal) {\n                return { customExpr: true };\n            } else {\n                // validate\n                const r = parseString(customExprVal);\n                if (r.errors && Object.keys(r.errors).length) {\n                    return { customExpr: true };\n                }\n            }\n        }\n    }\n};\n\nexport interface IFormFields {\n    scheduleType: number;\n    recurrence: number;\n    excludeHolidays: boolean;\n    holidays: string;\n    excludeWeekends: boolean;\n    excludeOthers: boolean;\n    otherDays: string;\n    customExpr: string;\n    startDate: Date;\n    endDate: Date;\n    monthOfYear: number;\n    dayOfMonth: number;\n    dayOfWeek: number;\n    time: Date;\n}\n\nfunction mapToFormFields(data: IScheduleTime) {\n    const defaultData = getDefaultScheduleTime();\n    data = Object.assign({}, defaultData, data || {});\n    return {\n        // The value for the radio button is type of string.\n        scheduleType: (data.isRecurrent ? ScheduleTypeEnum.Recurrent : ScheduleTypeEnum.OneTime).toString(),\n        recurrence: data.recurrence,\n        excludeHolidays: !!data.holidays,\n        holidays: data.holidays,\n        excludeWeekends: data.excludeWeekends,\n        excludeOthers: !!data.otherDays,\n        otherDays: data.otherDays,\n        customExpr: data.customExpr,\n        startDate: data.startDate,\n        endDate: data.endDate,\n        time: data.time,\n        monthOfYear: data.monthOfYear,\n        dayOfWeek: data.dayOfWeek,\n        dayOfMonth: data.dayOfMonth\n    };\n}\n\n@Component({\n    selector: 'polp-bs-schedule-time-picker',\n    templateUrl: './schedule-time-picker.component.html',\n    styleUrls: ['./schedule-time-picker.component.css']\n})\nexport class ScheduleTimePickerComponent extends DefaultFormBaseComponent\n    implements OnInit, OnDestroy, OnChanges, IHasAlertFeature {\n\n    @Input() initSettings: ISettings = {};\n    @Input() initValue: IScheduleTime = null;\n\n    settings: ISettings = {};\n\n    defaultRes = defaultDict;\n\n    // Schedule modle\n    form: FormGroup;\n    scheduleTypeOptions = [{\n        value: ScheduleTypeEnum.OneTime,\n        text: 'polpCronJob.oneTimeSchedule'\n    }, {\n        value: ScheduleTypeEnum.Recurrent,\n        text: 'polpCronJob.recurrentSchedule'\n    }];\n\n    recurrenceOptions = [{\n        value: IntervalEnum.Day,\n        text: 'polpCronJob.everyDay'\n    }, {\n        value: IntervalEnum.Week,\n        text: 'polpCronJob.everyWeek'\n    }, {\n        value: IntervalEnum.Month,\n        text: 'polpCronJob.everyMonth'\n    }, {\n        value: IntervalEnum.Year,\n        text: 'polpCronJob.everyYear'\n    }, {\n        value: IntervalEnum.Custom,\n        text: 'polpCronJob.customInterval'\n    }];\n\n    daysOfWeekOptions = getDaysOfWeek();\n    monthsOfYearOptions = getMonthsOfYear();\n    daysOfMonthOptions = getDaysOfMonth();\n\n    visibiltyCfg = {\n        scheduleType: true,\n        recurrence: false,\n        customExpr: false,\n        excludeHolidays: false,\n        excludeWeekends: false,\n        excludeOthers: false,\n        startDate: false,\n        endDate: false,\n        time: false,\n        monthOfYear: false,\n        dayOfMonth: false,\n        dayOfWeek: false\n    };\n\n    isSaving: boolean;\n    alertProvider = new AlertDefaultImpl();\n\n    private _subr: Subscription;\n\n    constructor(private _builder: FormBuilder) {\n        super();\n    }\n\n\n    get alerts() {\n        return this.alertProvider.data;\n    }\n\n    ngOnInit(): void {\n        this.settings = Object.assign({}, defaultSettings, this.initSettings);\n        this.hideCancelBtn = this.settings.hideCancelBtn;\n        this.hideSubmitBtn = this.settings.hideSubmitBtn;\n\n        const fields = mapToFormFields(this.initValue);\n        this.form = this._builder.group(fields, { validators: [formValidator] });\n        this.updateFieldVisibility(this.form.value);\n\n        this._subr = this.form.valueChanges.subscribe(a => {\n            this.updateFieldVisibility(a);\n\n            this.notifyValidation();\n            this.notifyValueChanges(this.computeOutValue(a));\n        });\n    }\n\n    ngOnDestroy() {\n        this._subr.unsubscribe();\n    }\n\n    ngOnChanges(data: SimpleChanges) {\n        if (data && data.initValue && !data.initValue.firstChange) {\n            this.updateFormData(data.initValue.currentValue);\n        }\n    }\n\n    protected updateFormData(data: IScheduleTime) {\n        const changes = mapToFormFields(data);\n        this.form.setValue(changes, {\n            emitEvent: true\n        });\n    }\n\n    protected updateFieldVisibility(a: IFormFields) {\n\n        for (let k in this.visibiltyCfg) {\n            if (this.visibiltyCfg.hasOwnProperty(k)) {\n                this.visibiltyCfg[k] = false;\n            }\n        }\n        this.visibiltyCfg.scheduleType = true;\n\n        const scheduleTypeVal = safeParseInt(a.scheduleType);\n\n        if (scheduleTypeVal == 1) {\n            this.visibiltyCfg.startDate = true;\n            this.visibiltyCfg.time = true;\n        } else {\n            this.visibiltyCfg.recurrence = true;\n            this.visibiltyCfg.excludeHolidays = true;\n            this.visibiltyCfg.excludeWeekends = true;\n            this.visibiltyCfg.excludeOthers = true;\n            this.visibiltyCfg.endDate = true;\n            this.visibiltyCfg.time = true;\n\n            const recurrentVal = safeParseInt(a.recurrence);\n            if (recurrentVal == IntervalEnum.Year) {\n                this.visibiltyCfg.monthOfYear = true;\n                this.visibiltyCfg.dayOfMonth = true;\n            } else if (recurrentVal == IntervalEnum.Month) {\n                this.visibiltyCfg.dayOfMonth = true;\n            } else if (recurrentVal == IntervalEnum.Week) {\n                this.visibiltyCfg.dayOfWeek = true;\n            } else if (recurrentVal == IntervalEnum.Custom) {\n                this.visibiltyCfg.time = false;\n                this.visibiltyCfg.customExpr = true;\n            }\n        }\n    }\n\n    protected computeOutValue(a: IFormFields) {\n        const scheduleTypeVal = safeParseInt(a.scheduleType);\n        const output = scheduleTypeVal == ScheduleTypeEnum.OneTime ?\n            this.getOneTimeValue(a) : this.getRecurrentValue(a);\n        return output;\n    }\n\n    protected getOneTimeValue(a: IFormFields): IScheduleTime {\n        return {\n            isRecurrent: false,\n            startDate: a.startDate,\n            time: a.time\n        };\n    }\n\n    protected getRecurrentValue(a: IFormFields): IScheduleTime {\n        const recurrence = safeParseInt(a.recurrence);\n\n        return {\n            isRecurrent: true,\n            recurrence: recurrence,\n            holidays: a.excludeHolidays ? a.holidays : '',\n            excludeWeekends: a.excludeWeekends,\n            otherDays: a.excludeOthers ? a.otherDays : '',\n            startDate: a.startDate,\n            endDate: a.endDate,\n            time: a.time,\n            monthOfYear: a.monthOfYear,\n            dayOfMonth: a.dayOfMonth,\n            dayOfWeek: a.dayOfWeek\n        };\n    }\n\n    confirm() {\n        if (!this.form.valid) {\n            this.alertProvider.warning('polpCronJob.errors.general', 5000);\n            return;\n        }\n\n        const output = this.computeOutValue(this.form.value);\n        this.onSave.emit(output);\n    }\n\n    cancel() {\n        this.onCancel.emit();\n    }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { ObservableModalAbstractComponent } from '@polpware/bs-components';\nimport { AlertDefaultImpl, IHasAlertFeature } from '@polpware/ngx-alert';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { IScheduleTime } from '../interfaces';\nimport { ISettings } from '../schedule-time-picker/schedule-time-picker.component';\n\nexport interface IModalInput {\n    title: string;\n    initSettings: ISettings;\n    initValue: IScheduleTime;\n    onConfirmAsync: (data: IScheduleTime) => Promise<any>;\n}\n\n@Component({\n    selector: 'polp-bs-schedule-time-modal',\n    templateUrl: './schedule-time-modal.component.html',\n    styleUrls: ['./schedule-time-modal.component.css']\n})\nexport class ScheduleTimeModalComponent\n    extends ObservableModalAbstractComponent<IModalInput, IScheduleTime>\n    implements OnInit, IHasAlertFeature {\n\n    faSpinner = faSpinner;\n\n    @Input() title: string = '';\n    @Input() initSettings: ISettings;\n    @Input() initValue: IScheduleTime;\n    @Input() onConfirmAsync: (data: IScheduleTime) => Promise<any>;\n\n    outputValue: IScheduleTime;\n    isValid: boolean;\n\n    isSaving: boolean;\n    alertProvider = new AlertDefaultImpl();\n\n    constructor(\n        public readonly bsModalRef: BsModalRef,\n        protected readonly bsModalService: BsModalService) {\n        super();\n    }\n\n    get alerts() {\n        return this.alertProvider.data;\n    }\n\n    ngOnInit(): void {\n    }\n\n    close() {\n        this.closeModal(this.outputValue);\n    }\n\n    updateScheduler(evt: IScheduleTime) {\n        this.outputValue = evt;\n    }\n\n    validateScheduler(evt: { valid: boolean }) {\n        if (evt) {\n            this.isValid = evt.valid;\n        }\n    }\n\n    async confirmAsync() {\n        this.alertProvider.clean();\n        if (!this.isValid) {\n            this.alertProvider.warning('Data is not valid!');\n            return;\n        }\n\n        this.isSaving = true;\n        this.alertProvider.warning('Working ....');\n        try {\n            await this.onConfirmAsync(this.outputValue);\n            this.closeModal(this.outputValue);\n        } catch (ex) {\n            this.alertProvider.clean();\n            this.alertProvider.danger('Something went wrong. Please try later!');\n        } finally {\n            this.isSaving = false;\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IntervalEnum } from '@polpware/fe-utilities';\nimport { parseExpression } from 'cron-parser';\nimport * as moment from 'moment';\nimport { IScheduleTime } from './interfaces';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CronJobService {\n\n    constructor() { }\n\n    parseCronExpr(source: string, target: IScheduleTime) {\n        const a = parseExpression(source);\n\n        // Case 1 (every year)\n        if (a.fields.month.length == 1 && a.fields.dayOfMonth.length == 1) {\n            target.recurrence = IntervalEnum.Year;\n        } else if (a.fields.month.length == 12 &&\n            a.fields.dayOfMonth.length == 1 &&\n            a.fields.dayOfWeek.length == 8) {\n            target.recurrence = IntervalEnum.Month;\n        } else if (a.fields.month.length == 12 &&\n            a.fields.dayOfMonth.length == 31 &&\n            a.fields.dayOfWeek.length == 1) {\n            target.recurrence = IntervalEnum.Week;\n        } else if (a.fields.month.length == 12 &&\n            a.fields.dayOfMonth.length == 31 &&\n            a.fields.dayOfWeek.length == 8) {\n            target.recurrence == IntervalEnum.Day;\n        } else {\n            target.recurrence = IntervalEnum.Custom;\n        }\n\n        // A utc time \n        const today = new Date();\n        const timeInUtc = new Date(Date.UTC(today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            a.fields.hour[0] || 0,\n            a.fields.minute[0] || 0));\n        // Time\n        target.time = timeInUtc;\n    }\n\n    composeCronExpr(source: IScheduleTime) {\n        // IsRecurrent true\n\n        // Convert it into Utc time\n        const utc = new Date(source.time);\n        const timeWrapper = moment(utc);\n        const hour = timeWrapper.utc().hour();\n\n        if (source.recurrence == IntervalEnum.Year) {\n            return `${utc.getMinutes()} ${hour} ${source.dayOfMonth} ${source.monthOfYear} *`;\n        } else if (source.recurrence == IntervalEnum.Month) {\n            return `${utc.getMinutes()} ${hour} ${source.dayOfMonth} * *`;\n        } else if (source.recurrence == IntervalEnum.Week) {\n            return `${utc.getMinutes()} ${hour} * * ${source.dayOfWeek}`;\n        } else if (source.recurrence == IntervalEnum.Day) {\n            return `${utc.getMinutes()} ${hour} * * *`;\n        } else if (source.recurrence == IntervalEnum.Custom) {\n            return source.customExpr;\n        }\n\n        return '';\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { IModalInput, ScheduleTimeModalComponent } from './schedule-time-modal/schedule-time-modal.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UtilsService {\n\n    constructor(private readonly _modalService: BsModalService) { }\n\n    showScheduleTimeEditorAsync(input: IModalInput) {\n        const modalRef = this._modalService.show(ScheduleTimeModalComponent, {\n            animated: true,\n            ignoreBackdropClick: true,\n            initialState: Object.assign({}, input),\n            keyboard: false,\n            class: 'modal-dialog-centered'\n        });\n\n        return modalRef.content.result.toPromise();\n    }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { FtAutofocusModule } from '@40three/ngx-autofocus-directive';\n\nimport { NgxI18nModule } from '@polpware/ngx-i18n';\nimport { PolpDraggableModule } from '@polpware/modal-directives';\n\nimport { ScheduleTimePickerComponent } from './schedule-time-picker/schedule-time-picker.component';\nimport { ScheduleTimeModalComponent } from './schedule-time-modal/schedule-time-modal.component';\n\n@NgModule({\n    declarations: [\n        ScheduleTimePickerComponent,\n        ScheduleTimeModalComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        BsDropdownModule,\n        TabsModule,\n        PaginationModule,\n        ModalModule,\n        AccordionModule,\n        PopoverModule,\n        TooltipModule,\n        CarouselModule,\n        AlertModule,\n        BsDatepickerModule,\n        ButtonsModule,\n        CollapseModule,\n        ProgressbarModule,\n        TimepickerModule,\n\n        FtAutofocusModule,\n\n        NgxI18nModule,\n        PolpDraggableModule\n    ],\n    exports: [\n        ScheduleTimePickerComponent,\n        ScheduleTimeModalComponent\n    ]\n})\nexport class PolpBsCronJobModule { }\n"]}