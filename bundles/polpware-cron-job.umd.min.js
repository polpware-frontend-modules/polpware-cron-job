!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@polpware/fe-utilities"),require("@angular/core"),require("@angular/forms"),require("@polpware/ngx-alert"),require("@polpware/ngx-form-common"),require("cron-parser"),require("@fortawesome/free-solid-svg-icons"),require("@polpware/bs-components"),require("ngx-bootstrap/modal"),require("moment"),require("@polpware/ngx-i18n"),require("@angular/common"),require("ngx-bootstrap/accordion"),require("ngx-bootstrap/alert"),require("ngx-bootstrap/buttons"),require("ngx-bootstrap/carousel"),require("ngx-bootstrap/collapse"),require("ngx-bootstrap/datepicker"),require("ngx-bootstrap/dropdown"),require("ngx-bootstrap/pagination"),require("ngx-bootstrap/popover"),require("ngx-bootstrap/progressbar"),require("ngx-bootstrap/tabs"),require("ngx-bootstrap/timepicker"),require("ngx-bootstrap/tooltip"),require("@40three/ngx-autofocus-directive"),require("@polpware/modal-directives"),require("ngx-chips")):"function"==typeof define&&define.amd?define("@polpware/cron-job",["exports","@polpware/fe-utilities","@angular/core","@angular/forms","@polpware/ngx-alert","@polpware/ngx-form-common","cron-parser","@fortawesome/free-solid-svg-icons","@polpware/bs-components","ngx-bootstrap/modal","moment","@polpware/ngx-i18n","@angular/common","ngx-bootstrap/accordion","ngx-bootstrap/alert","ngx-bootstrap/buttons","ngx-bootstrap/carousel","ngx-bootstrap/collapse","ngx-bootstrap/datepicker","ngx-bootstrap/dropdown","ngx-bootstrap/pagination","ngx-bootstrap/popover","ngx-bootstrap/progressbar","ngx-bootstrap/tabs","ngx-bootstrap/timepicker","ngx-bootstrap/tooltip","@40three/ngx-autofocus-directive","@polpware/modal-directives","ngx-chips"],t):t(((e=e||self).polpware=e.polpware||{},e.polpware["cron-job"]={}),e.feUtilities,e.ng.core,e.ng.forms,e.ngxAlert,e.ngxFormCommon,e.cronParser,e.freeSolidSvgIcons,e.bsComponents,e.modal,e.moment,e.ngxI18n,e.ng.common,e.accordion,e.alert,e.buttons,e.carousel,e.collapse,e.datepicker,e.dropdown,e.pagination,e.popover,e.progressbar,e.tabs,e.timepicker,e.tooltip,e.ngxAutofocusDirective,e.modalDirectives,e.ngxChips)}(this,(function(e,t,n,o,r,i,a,l,s,c,u,p,d,f,m,y,h,b,v,g,x,C,O,k,M,T,w,D,I){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var J=function(e,t){return(J=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function S(e,t){function n(){this.constructor=e}J(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function E(e,t,n,o){var r,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(i<3?r(a):i>3?r(t,n,a):r(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a}function V(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function P(e,t,n,o){return new(n||(n=Promise))((function(r,i){function a(e){try{s(o.next(e))}catch(e){i(e)}}function l(e){try{s(o.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((o=o.apply(e,t||[])).next())}))}function B(e,t){var n,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,o=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){a.label=i[1];break}if(6===i[0]&&a.label<r[1]){a.label=r[1],r=i;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(i);break}r[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],o=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}}function H(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,r,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(o=i.next()).done;)a.push(o.value)}catch(e){r={error:e}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return a}var W,R={polpCronJob:{scheduleType:"Schedule Type",recurrence:"Recurrence",customExpr:"Custom CRON expression",startDate:"Start date",monthOfYear:"Month",dayOfMonth:"Day",dayOfWeek:"Day",time:"Time",excludeHolidays:"Exclude holidays",holidayLabel:"Define the list of holidays",excludeWeekends:"Exclude weekends",excludeOthers:"Other exceptions",otherLabel:"Define the list of exceptions",selectOne:"Select one below",endDate:"End date",closeBtn:"Close",cancelBtn:"Cancel",submitBtn:"Submit",confirmBtn:"Confirm",oneTimeSchedule:"One time",recurrentSchedule:"Recurrent",everyDay:"Every day",everyWeek:"Every week",everyMonth:"Every month",everyYear:"Every year",customInterval:"Custom",January:"January",February:"February",March:"March",April:"April",May:"May",June:"June",July:"July",August:"August",September:"September",October:"October",November:"November",December:"December",Sunday:"Sunday",Monday:"Monday",Tuesday:"Tuesday",Wednesday:"Wednesday",Thursday:"Thursday",Friday:"Friday",Saturday:"Saturday",messages:{working:"Working ..."},errors:{general:"Some of your inputs are not valid. Please check them!",customExprInvalid:"Invalid CRON expression",scheduleTypeRequired:"Please select one schedule type!",somethingWrong:"Something went wrong. Please try later!"}}};function j(){var e=new Date,n=new Date(e);return n.setDate(n.getDate()+1),{isRecurrent:!1,recurrence:0,holidays:"",excludeWeekends:!1,otherDays:"",customExpr:"",startDate:n,endDate:null,time:e,monthOfYear:t.MonthEnum.January,dayOfMonth:1,dayOfWeek:t.DayOfWeekEnum.Monday}}(W=e.ScheduleTypeEnum||(e.ScheduleTypeEnum={}))[W.OneTime=1]="OneTime",W[W.Recurrent=2]="Recurrent";var q={hideSubmitBtn:!1,hideCancelBtn:!0},F=function(e){var n=t.safeParseInt(e.get("scheduleType").value);if(0==n)return{scheduleType:!0};if(2==n){var o=t.safeParseInt(e.get("recurrence").value);if(0==o)return{recurrence:!0};if(o==t.IntervalEnum.Custom){var r=e.get("customExpr").value;if(!r)return{customExpr:!0};var i=a.parseString(r);if(i.errors&&Object.keys(i.errors).length)return{customExpr:!0}}}},A=F;function _(t){var n=j();return{scheduleType:((t=Object.assign({},n,t||{})).isRecurrent?e.ScheduleTypeEnum.Recurrent:e.ScheduleTypeEnum.OneTime).toString(),recurrence:t.recurrence,excludeHolidays:!!t.holidays,holidays:t.holidays,excludeWeekends:t.excludeWeekends,excludeOthers:!!t.otherDays,otherDays:t.otherDays,customExpr:t.customExpr,startDate:t.startDate,endDate:t.endDate,time:t.time,monthOfYear:t.monthOfYear,dayOfWeek:t.dayOfWeek,dayOfMonth:t.dayOfMonth}}var Y=function(i){function a(n){var o=i.call(this)||this;return o._builder=n,o.initSettings={},o.initValue=null,o.settings={},o.prefix="stp-"+(new Date).getTime()+"-",o.scheduleTypeOptions=[{value:e.ScheduleTypeEnum.OneTime,text:"polpCronJob.oneTimeSchedule"},{value:e.ScheduleTypeEnum.Recurrent,text:"polpCronJob.recurrentSchedule"}],o.recurrenceOptions=[{value:t.IntervalEnum.Day,text:"polpCronJob.everyDay"},{value:t.IntervalEnum.Week,text:"polpCronJob.everyWeek"},{value:t.IntervalEnum.Month,text:"polpCronJob.everyMonth"},{value:t.IntervalEnum.Year,text:"polpCronJob.everyYear"},{value:t.IntervalEnum.Custom,text:"polpCronJob.customInterval"}],o.daysOfWeekOptions=t.getDaysOfWeek(),o.monthsOfYearOptions=t.getMonthsOfYear(),o.daysOfMonthOptions=t.getDaysOfMonth(),o.visibiltyCfg={scheduleType:!0,recurrence:!1,customExpr:!1,excludeHolidays:!1,excludeWeekends:!1,excludeOthers:!1,startDate:!1,endDate:!1,time:!1,monthOfYear:!1,dayOfMonth:!1,dayOfWeek:!1},o.alertProvider=new r.AlertDefaultImpl,o}return S(a,i),Object.defineProperty(a.prototype,"alerts",{get:function(){return this.alertProvider.data},enumerable:!0,configurable:!0}),a.prototype.ngOnInit=function(){var e=this;this.settings=Object.assign({},q,this.initSettings),this.hideCancelBtn=this.settings.hideCancelBtn,this.hideSubmitBtn=this.settings.hideSubmitBtn;var t=_(this.initValue);this.form=this._builder.group(t,{validators:[F]}),this.updateFieldVisibility(this.form.value),this._subr=this.form.valueChanges.subscribe((function(t){e.updateFieldVisibility(t),e.notifyValidation(),e.notifyValueChanges(e.computeOutValue(t))}))},a.prototype.ngOnDestroy=function(){this._subr.unsubscribe()},a.prototype.ngOnChanges=function(e){e&&e.initValue&&!e.initValue.firstChange&&this.updateFormData(e.initValue.currentValue)},a.prototype.updateFormData=function(e){var t=_(e);this.form.setValue(t,{emitEvent:!0})},a.prototype.updateFieldVisibility=function(e){for(var n in this.visibiltyCfg)this.visibiltyCfg.hasOwnProperty(n)&&(this.visibiltyCfg[n]=!1);if(this.visibiltyCfg.scheduleType=!0,1==t.safeParseInt(e.scheduleType))this.visibiltyCfg.startDate=!0,this.visibiltyCfg.time=!0;else{this.visibiltyCfg.recurrence=!0,this.visibiltyCfg.excludeHolidays=!0,this.visibiltyCfg.excludeWeekends=!0,this.visibiltyCfg.excludeOthers=!0,this.visibiltyCfg.endDate=!0,this.visibiltyCfg.time=!0;var o=t.safeParseInt(e.recurrence);o==t.IntervalEnum.Year?(this.visibiltyCfg.monthOfYear=!0,this.visibiltyCfg.dayOfMonth=!0):o==t.IntervalEnum.Month?this.visibiltyCfg.dayOfMonth=!0:o==t.IntervalEnum.Week?this.visibiltyCfg.dayOfWeek=!0:o==t.IntervalEnum.Custom&&(this.visibiltyCfg.time=!1,this.visibiltyCfg.customExpr=!0)}},a.prototype.computeOutValue=function(n){return t.safeParseInt(n.scheduleType)==e.ScheduleTypeEnum.OneTime?this.getOneTimeValue(n):this.getRecurrentValue(n)},a.prototype.getOneTimeValue=function(e){return{isRecurrent:!1,startDate:e.startDate,time:e.time}},a.prototype.getRecurrentValue=function(e){return{isRecurrent:!0,recurrence:t.safeParseInt(e.recurrence),holidays:e.excludeHolidays?e.holidays:"",excludeWeekends:e.excludeWeekends,otherDays:e.excludeOthers?e.otherDays:"",startDate:e.startDate,endDate:e.endDate,time:e.time,monthOfYear:e.monthOfYear,dayOfMonth:e.dayOfMonth,dayOfWeek:e.dayOfWeek}},a.prototype.confirm=function(){if(this.form.valid){var e=this.computeOutValue(this.form.value);this.onSave.emit(e)}else this.alertProvider.warning("polpCronJob.errors.general",5e3)},a.prototype.cancel=function(){this.onCancel.emit()},a.ctorParameters=function(){return[{type:o.FormBuilder}]},E([n.Input(),V("design:type",Object)],a.prototype,"initSettings",void 0),E([n.Input(),V("design:type",Object)],a.prototype,"initValue",void 0),a=E([n.Component({selector:"polp-bs-schedule-time-picker",template:'<form [formGroup]="form" (ngSubmit)="confirm()">\n    <div class="form-group row" *ngIf="visibiltyCfg.scheduleType">\n        <label class="col-12 col-md-4 col-form-label">\n            {{\'polpCronJob.scheduleType\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <div class="form-check form-check-inline"\n                 *ngFor="let opt of scheduleTypeOptions;let i=index">\n                <input class="form-check-input"\n                       formControlName="scheduleType"\n                       type="radio"\n                       id="{{prefix + \'schedule-type-opt-\' + i}}"\n                       value="{{opt.value}}">\n                <label class="form-check-label"\n                       for="{{prefix + \'schedule-type-opt-\' + i}}">\n                    {{opt.text | cronJobHyperTrans}}\n                </label>\n            </div>\n            <span class="text-warning d-block my-1 small" *ngIf="form.hasError(\'scheduleType\') && (form.get(\'scheduleType\').dirty || form.get(\'scheduleType\').touched)">\n                {{\'polpCronJob.errors.scheduleTypeRequired\' | cronJobHyperTrans}}\n            </span>\n        </div>\n    </div>\n    \n    <div class="form-group row" *ngIf="visibiltyCfg.recurrence">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-recurrence\'}}">\n            {{\'polpCronJob.recurrence\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <select class="form-control"\n                    id="{{prefix + \'schedule-recurrence\'}}"\n                    formControlName="recurrence">\n                <option selected value="">{{\'polpCronJob.selectOne\' | cronJobHyperTrans}}</option>\n                <option value="{{opt.value}}" *ngFor="let opt of recurrenceOptions">\n                    {{opt.text | cronJobHyperTrans}}\n                </option>\n            </select>\n        </div>\n    </div>\n\n    <div class="form-group row" *ngIf="visibiltyCfg.recurrence && visibiltyCfg.customExpr">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-custom-expr\'}}">\n            {{\'polpCronJob.customExpr\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <input class="form-control"\n                   type="text"\n                   [autofocus]="true"\n                   id="{{prefix + \'schedule-custom-expr\'}}"\n                   formControlName="customExpr">\n            <span class="text-warning d-block my-1 small" *ngIf="form.hasError(\'customExpr\') && (form.get(\'customExpr\').dirty || form.get(\'customExpr\').touched)">\n                {{\'polpCronJob.errors.customExprInvalid\' | cronJobHyperTrans}}\n            </span>\n        </div>\n    </div>\n\n    <div class="form-group row" *ngIf="visibiltyCfg.startDate">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-start-date\'}}">\n            {{\'polpCronJob.startDate\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <input class="form-control"\n                   type="text"\n                   id="{{prefix + \'schedule-start-date\'}}"\n                   bsDatepicker\n                   [bsConfig]="{ adaptivePosition: true }"\n                   formControlName="startDate">\n        </div>\n    </div>\n\n\n    <div class="form-group row" *ngIf="visibiltyCfg.monthOfYear">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-month-of-year\'}}">\n            {{\'polpCronJob.monthOfYear\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <select class="form-control"\n                    id="{{prefix + \'schedule-month-of-year\'}}"\n                    formControlName="monthOfYear">\n                <option selected value="">...</option>\n                <option value="{{opt.value}}" *ngFor="let opt of monthsOfYearOptions">\n                    {{opt.text | cronJobHyperTrans}}\n                </option>\n            </select>\n        </div>\n    </div>\n\n    <div class="form-group row" *ngIf="visibiltyCfg.dayOfMonth">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-day-of-month\'}}">\n            {{\'polpCronJob.dayOfMonth\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <select class="form-control"\n                    id="{{prefix + \'schedule-day-of-month\'}}"\n                    formControlName="dayOfMonth">\n                <option selected value="">...</option>\n                <option value="{{opt.value}}" *ngFor="let opt of daysOfMonthOptions">\n                    {{opt.text}}\n                </option>\n            </select>\n        </div>\n    </div>\n\n\n    <div class="form-group row" *ngIf="visibiltyCfg.dayOfWeek">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-day-of-week\'}}">\n            {{\'polpCronJob.dayOfWeek\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <select class="form-control"\n                    id="{{prefix + \'schedule-day-of-week\'}}"\n                    formControlName="dayOfWeek">\n                <option selected value="">...</option>\n                <option value="{{opt.value}}" *ngFor="let opt of daysOfWeekOptions">\n                    {{opt.text | cronJobHyperTrans}}\n                </option>\n            </select>\n        </div>\n    </div>\n\n    <div class="form-group row" *ngIf="visibiltyCfg.time">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-time\'}}">\n            {{\'polpCronJob.time\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <timepicker id="{{prefix + \'schedule-time\'}}"\n                        formControlName="time">\n            </timepicker>\n        </div>\n    </div>\n\n    <div class="form-group row" *ngIf="visibiltyCfg.excludeHolidays">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-exclude-holidays\'}}">\n            {{\'polpCronJob.excludeHolidays\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <div class="form-check">\n                <input class="form-check-input position-static"\n                       type="checkbox"\n                       id="{{prefix + \'schedule-exclude-holidays\'}}"\n                       formControlName="excludeHolidays">\n            </div>\n            <div>\n                {{\'polpCronJob.holidayLabel\' | cronJobHyperTrans}}\n            </div>\n        </div>\n    </div>\n    <div class="form-group row" *ngIf="visibiltyCfg.excludeWeekends">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-exclude-weekends\'}}">\n            {{\'polpCronJob.excludeWeekends\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <div class="form-check">\n                <input class="form-check-input position-static"\n                       type="checkbox"\n                       id="{{prefix + \'schedule-exclude-weekends\'}}"\n                       formControlName="excludeWeekends">\n            </div>\n        </div>\n    </div>\n    <div class="form-group row" *ngIf="visibiltyCfg.excludeOthers">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-exclude-others\'}}">\n            {{\'polpCronJob.excludeOthers\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <div class="form-check">\n                <input class="form-check-input position-static"\n                       id="{{prefix + \'schedule-exclude-others\'}}"\n                       type="checkbox"\n                       formControlName="excludeOthers">\n            </div>\n            <div>\n                {{\'polpCronJob.otherLabel\' | cronJobHyperTrans}}\n            </div>\n        </div>\n    </div>\n\n    <div class="form-group row" *ngIf="visibiltyCfg.endDate">\n        <label class="col-12 col-md-4 col-form-label"\n               for="{{prefix + \'schedule-end-date\'}}">\n            {{\'polpCronJob.endDate\' | cronJobHyperTrans}}\n        </label>\n        <div class="col-12 col-md-8">\n            <input class="form-control"\n                   type="text"\n                   id="{{prefix + \'schedule-end-date\'}}"\n                   bsDatepicker\n                   [bsConfig]="{ adaptivePosition: true }"\n                   formControlName="endDate">\n        </div>\n    </div>\n\n    <ng-container *ngFor="let a of alerts">\n        <alert [type]="a.type" [dismissOnTimeout]="a.timeout">\n            {{a.message | cronJobHyperTrans}}\n        </alert>\n    </ng-container>\n    \n    <div class="d-flex justify-content-end mb-4" *ngIf="!hideSubmitBtn || !hideCancelBtn">\n        <button type="button" class="btn btn-warning"\n                (click)="cancel()" *ngIf="!hideCancelBtn">\n            {{\'polpCronJob.cancelBtn\' | cronJobHyperTrans}}\n        </button>\n        <button type="submit" class="btn btn-success"\n                *ngIf="!hideSubmitBtn">\n            {{\'polpCronJob.submitBtn\' | cronJobHyperTrans}}\n        </button>\n    </div>\n</form>\n',styles:[""]}),V("design:paramtypes",[o.FormBuilder])],a)}(i.DefaultFormBaseComponent),N=function(e){function t(t,n){var o=e.call(this)||this;return o.bsModalRef=t,o.bsModalService=n,o.faSpinner=l.faSpinner,o.title="",o.alertProvider=new r.AlertDefaultImpl,o}return S(t,e),Object.defineProperty(t.prototype,"alerts",{get:function(){return this.alertProvider.data},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.close=function(){this.closeModal(null)},t.prototype.updateScheduler=function(e){this.outputValue=e},t.prototype.validateScheduler=function(e){e&&(this.isValid=e.valid)},t.prototype.confirmAsync=function(){return P(this,void 0,void 0,(function(){return B(this,(function(e){switch(e.label){case 0:if(this.alertProvider.clean(),!this.isValid)return this.alertProvider.warning("polpCronJob.general"),[2];this.isSaving=!0,this.alertProvider.info("polpCronJob.messages.working"),e.label=1;case 1:return e.trys.push([1,3,4,5]),[4,this.onConfirmAsync(this.outputValue)];case 2:return e.sent(),this.closeModal(this.outputValue),[3,5];case 3:return e.sent(),this.alertProvider.clean(),this.alertProvider.danger("polpCronJob.errors.somethingWrong!"),[3,5];case 4:return this.isSaving=!1,[7];case 5:return[2]}}))}))},t.ctorParameters=function(){return[{type:c.BsModalRef},{type:c.BsModalService}]},E([n.Input(),V("design:type",String)],t.prototype,"title",void 0),E([n.Input(),V("design:type",Object)],t.prototype,"initSettings",void 0),E([n.Input(),V("design:type",Object)],t.prototype,"initValue",void 0),E([n.Input(),V("design:type",Function)],t.prototype,"onConfirmAsync",void 0),t=E([n.Component({selector:"polp-bs-schedule-time-modal",template:'<div class="modal-header" polpModalDraggable>\n    <h4 class="modal-title">{{title}}</h4>\n</div>\n<div class="modal-body">\n    <polp-bs-schedule-time-picker [initSettings]="initSettings"\n                                  [initValue]="initValue"\n                                  (onValidation)="validateScheduler($event)"\n                                  (onValueChanged)="updateScheduler($event)">\n    </polp-bs-schedule-time-picker>\n    \n    <ng-container *ngFor="let a of alerts">\n        <alert [type]="a.type" [dismissOnTimeout]="a.timeout">\n            {{a.message | cronJobHyperTrans}}\n        </alert>\n    </ng-container>\n    \n</div>\n<div class="modal-footer">\n    <div class="d-flex justify-content-end">\n        <button class="btn btn-secondary mr-2" (click)="close()">\n            {{\'polpCronJob.closeBtn\' | cronJobHyperTrans}}\n        </button>\n        <button type="button" class="btn btn-primary" *ngIf="isValid"\n                (click)="confirmAsync()">\n            {{\'polpCronJob.confirmBtn\' | cronJobHyperTrans}}\n            <fa-icon [icon]="faSpinner" [spin]="true" class="ml-1" *ngIf="isSaving"></fa-icon>\n        </button>\n    </div>\n</div>\n',styles:[""]}),V("design:paramtypes",[c.BsModalRef,c.BsModalService])],t)}(s.ObservableModalAbstractComponent);var L=function(e){var n=e.get("chips").value;if(n&&(Array.isArray(n)||(n=[n]),n.some((function(e){var n=e.value;if(!n)return!0;var o=n.split("/");if(2!=o.length)return!0;var r=t.safeParseInt(o[0]);if(r<1||r>12)return!0;var i=t.safeParseInt(o[1]);return i<0||i>31||void 0}))))return{chips:!0};return null},$=function(e){function t(t){var n=e.call(this)||this;return n._builder=t,n.initValue=[],n.prefix="mdp-"+(new Date).getTime()+"-",n.bsValue=new Date,n.items=[],n.form=n._builder.group({chips:[]},{validators:[L]}),n}return S(t,e),t.prototype.ngOnInit=function(){var e=this;if(this.initValue){var t=this.initValue.map((function(e){return{display:e,value:e}}));setTimeout((function(){e.form.setValue({chips:t})}))}this._subr=this.form.valueChanges.subscribe((function(t){e.notifyValidation(),e.notifyValueChanges(t.chips)}))},t.prototype.ngOnDestroy=function(){this._subr.unsubscribe()},t.prototype.confirm=function(){if(this.bsValue){var e=this.form.value.chips||[],t=function(e){var t=(1+e.getMonth()).toString();t=t.length>1?t:"0"+t;var n=e.getDate().toString();return t+"/"+(n=n.length>1?n:"0"+n)}(this.bsValue),n=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(H(arguments[t]));return e}(e,[{display:t,value:t}]);this.form.setValue({chips:n})}},t.ctorParameters=function(){return[{type:o.FormBuilder}]},E([n.Input(),V("design:type",Array)],t.prototype,"initValue",void 0),t=E([n.Component({selector:"polp-bs-multi-date-picker",template:'<form (ngSubmit)="confirm()">\n    <div class="form-group row">\n        <label class="col-12 col-form-label"\n               for="{{prefix + \'tag-input\'}}">\n            {{\'polpCronJob.startDate\' | cronJobHyperTrans}}\n        </label>\n        \n        <div class="input-group">\n            <input type="text"\n                   class="form-control"\n                   id="{{prefix + \'tag-input\'}}"\n                   bsDatepicker\n                   [bsConfig]="{ adaptivePosition: true }"\n                   [bsValue]="bsValue">\n            <div class="input-group-append">            \n                <button type="submit" class="btn btn-primary">\n                    {{\'polpCronJob.submitBtn\' | cronJobHyperTrans}}\n                </button>\n            </div>\n        </div>\n    </div>\n</form>\n\n\n\n<form [formGroup]="form">\n    <div class="form-group row">\n        <tag-input\n            [formControlName]="\'chips\'">\n        </tag-input>\n    </div>\n</form>    \n',styles:[""]}),V("design:paramtypes",[o.FormBuilder])],t)}(i.DefaultFormBaseComponent),G=function(e){function t(t,n){var o=e.call(this)||this;return o.bsModalRef=t,o.bsModalService=n,o.title="",o.initValue=[],o.alertProvider=new r.AlertDefaultImpl,o}return S(t,e),Object.defineProperty(t.prototype,"alerts",{get:function(){return this.alertProvider.data},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.close=function(){this.closeModal(null)},t.prototype.updateValue=function(e){e&&(this.outputValue=e.map((function(e){return e.value})))},t.prototype.validate=function(e){e&&(this.isValid=e.valid)},t.prototype.confirm=function(){this.closeModal(this.outputValue)},t.ctorParameters=function(){return[{type:c.BsModalRef},{type:c.BsModalService}]},E([n.Input(),V("design:type",String)],t.prototype,"title",void 0),E([n.Input(),V("design:type",Array)],t.prototype,"initValue",void 0),t=E([n.Component({selector:"polp-bs-multi-date-modal",template:'<div class="modal-header" polpModalDraggable>\n    <h4 class="modal-title">{{title}}</h4>\n</div>\n<div class="modal-body">\n    <polp-bs-multi-date-picker [initValue]="initValue"\n                               (onValidation)="validate($event)"\n                               (onValueChanged)="updateValue($event)">\n    </polp-bs-multi-date-picker>\n    \n    <ng-container *ngFor="let a of alerts">\n        <alert [type]="a.type" [dismissOnTimeout]="a.timeout">\n            {{a.message | cronJobHyperTrans}}\n        </alert>\n    </ng-container>\n    \n</div>\n<div class="modal-footer">\n    <div class="d-flex justify-content-end">\n        <button class="btn btn-secondary mr-2" (click)="close()">\n            {{\'polpCronJob.closeBtn\' | cronJobHyperTrans}}\n        </button>\n        <button type="button" class="btn btn-primary" *ngIf="isValid"\n                (click)="confirm()">\n            {{\'polpCronJob.confirmBtn\' | cronJobHyperTrans}}\n        </button>\n    </div>\n</div>\n',styles:[""]}),V("design:paramtypes",[c.BsModalRef,c.BsModalService])],t)}(s.ObservableModalAbstractComponent),U=function(){function e(){}return e.prototype.parseCronExpr=function(e,n){var o=a.parseExpression(e);1==o.fields.month.length&&1==o.fields.dayOfMonth.length?n.recurrence=t.IntervalEnum.Year:12==o.fields.month.length&&1==o.fields.dayOfMonth.length&&8==o.fields.dayOfWeek.length?n.recurrence=t.IntervalEnum.Month:12==o.fields.month.length&&31==o.fields.dayOfMonth.length&&1==o.fields.dayOfWeek.length?n.recurrence=t.IntervalEnum.Week:12==o.fields.month.length&&31==o.fields.dayOfMonth.length&&8==o.fields.dayOfWeek.length?n.recurrence=t.IntervalEnum.Day:n.recurrence=t.IntervalEnum.Custom;var r=new Date,i=new Date(Date.UTC(r.getFullYear(),r.getMonth(),r.getDate(),o.fields.hour[0]||0,o.fields.minute[0]||0));n.time=i},e.prototype.composeCronExpr=function(e){var n=new Date(e.time),o=u(n).utc().hour();return e.recurrence==t.IntervalEnum.Year?n.getMinutes()+" "+o+" "+e.dayOfMonth+" "+e.monthOfYear+" *":e.recurrence==t.IntervalEnum.Month?n.getMinutes()+" "+o+" "+e.dayOfMonth+" * *":e.recurrence==t.IntervalEnum.Week?n.getMinutes()+" "+o+" * * "+e.dayOfWeek:e.recurrence==t.IntervalEnum.Day?n.getMinutes()+" "+o+" * * *":e.recurrence==t.IntervalEnum.Custom?e.customExpr:""},e.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e=E([n.Injectable({providedIn:"root"}),V("design:paramtypes",[])],e)}(),z=function(){function e(e){this._modalService=e}return e.prototype.showScheduleTimeEditorAsync=function(e){return this._modalService.show(N,{animated:!0,ignoreBackdropClick:!0,initialState:Object.assign({},e),keyboard:!1,class:"modal-dialog-centered"}).content.result.toPromise()},e.prototype.showMultiDateEditorAsync=function(e){return this._modalService.show(G,{animated:!0,ignoreBackdropClick:!0,initialState:Object.assign({},e),keyboard:!1,class:"modal-dialog-centered"}).content.result.toPromise()},e.ctorParameters=function(){return[{type:c.BsModalService}]},e.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(c.BsModalService))},token:e,providedIn:"root"}),e=E([n.Injectable({providedIn:"root"}),V("design:paramtypes",[c.BsModalService])],e)}(),K=function(e){function t(){var t=e.call(this)||this;return t._dict=R,t}return S(t,e),t}(p.NgxTranslatorImplService),Q=function(e){function t(t,n){var o=e.call(this)||this;return o._translate=t,o._ref=n,o}return S(t,e),t.ctorParameters=function(){return[{type:K},{type:n.ChangeDetectorRef}]},t=E([n.Pipe({name:"cronJobHyperTrans",pure:!1}),V("design:paramtypes",[K,n.ChangeDetectorRef])],t)}(p.HyperTranslatePipeBase),X=function(){function e(){}return e=E([n.NgModule({declarations:[Y,N,Q,$,G],imports:[d.CommonModule,o.FormsModule,o.ReactiveFormsModule,g.BsDropdownModule,k.TabsModule,x.PaginationModule,c.ModalModule,f.AccordionModule,C.PopoverModule,T.TooltipModule,h.CarouselModule,m.AlertModule,v.BsDatepickerModule,y.ButtonsModule,b.CollapseModule,O.ProgressbarModule,M.TimepickerModule,w.FtAutofocusModule,p.NgxI18nModule,D.PolpDraggableModule,I.TagInputModule],exports:[Y,N,Q,$,G]})],e)}();e.CronJobHyperTransPipe=Q,e.CronJobService=U,e.CronJobTranslatorService=K,e.MultiDateModalComponent=G,e.MultiDatePickerComponent=$,e.PolpBsCronJobModule=X,e.ScheduleTimeModalComponent=N,e.ScheduleTimePickerComponent=Y,e.UtilsService=z,e.defaultDict=R,e.getDefaultScheduleTime=j,e.ɵ0=A,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=polpware-cron-job.umd.min.js.map